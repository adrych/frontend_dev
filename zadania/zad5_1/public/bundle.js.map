{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rxjs-compat/Rx.js","webpack:///./node_modules/rxjs-compat/add/observable/bindCallback.js","webpack:///./node_modules/rxjs-compat/add/observable/bindNodeCallback.js","webpack:///./node_modules/rxjs-compat/add/observable/combineLatest.js","webpack:///./node_modules/rxjs-compat/add/observable/concat.js","webpack:///./node_modules/rxjs-compat/add/observable/defer.js","webpack:///./node_modules/rxjs-compat/add/observable/dom/ajax.js","webpack:///./node_modules/rxjs-compat/add/observable/dom/webSocket.js","webpack:///./node_modules/rxjs-compat/add/observable/empty.js","webpack:///./node_modules/rxjs-compat/add/observable/forkJoin.js","webpack:///./node_modules/rxjs-compat/add/observable/from.js","webpack:///./node_modules/rxjs-compat/add/observable/fromEvent.js","webpack:///./node_modules/rxjs-compat/add/observable/fromEventPattern.js","webpack:///./node_modules/rxjs-compat/add/observable/fromPromise.js","webpack:///./node_modules/rxjs-compat/add/observable/generate.js","webpack:///./node_modules/rxjs-compat/add/observable/if.js","webpack:///./node_modules/rxjs-compat/add/observable/interval.js","webpack:///./node_modules/rxjs-compat/add/observable/merge.js","webpack:///./node_modules/rxjs-compat/add/observable/never.js","webpack:///./node_modules/rxjs-compat/add/observable/of.js","webpack:///./node_modules/rxjs-compat/add/observable/onErrorResumeNext.js","webpack:///./node_modules/rxjs-compat/add/observable/pairs.js","webpack:///./node_modules/rxjs-compat/add/observable/race.js","webpack:///./node_modules/rxjs-compat/add/observable/range.js","webpack:///./node_modules/rxjs-compat/add/observable/throw.js","webpack:///./node_modules/rxjs-compat/add/observable/timer.js","webpack:///./node_modules/rxjs-compat/add/observable/using.js","webpack:///./node_modules/rxjs-compat/add/observable/zip.js","webpack:///./node_modules/rxjs-compat/add/operator/audit.js","webpack:///./node_modules/rxjs-compat/add/operator/auditTime.js","webpack:///./node_modules/rxjs-compat/add/operator/buffer.js","webpack:///./node_modules/rxjs-compat/add/operator/bufferCount.js","webpack:///./node_modules/rxjs-compat/add/operator/bufferTime.js","webpack:///./node_modules/rxjs-compat/add/operator/bufferToggle.js","webpack:///./node_modules/rxjs-compat/add/operator/bufferWhen.js","webpack:///./node_modules/rxjs-compat/add/operator/catch.js","webpack:///./node_modules/rxjs-compat/add/operator/combineAll.js","webpack:///./node_modules/rxjs-compat/add/operator/combineLatest.js","webpack:///./node_modules/rxjs-compat/add/operator/concat.js","webpack:///./node_modules/rxjs-compat/add/operator/concatAll.js","webpack:///./node_modules/rxjs-compat/add/operator/concatMap.js","webpack:///./node_modules/rxjs-compat/add/operator/concatMapTo.js","webpack:///./node_modules/rxjs-compat/add/operator/count.js","webpack:///./node_modules/rxjs-compat/add/operator/debounce.js","webpack:///./node_modules/rxjs-compat/add/operator/debounceTime.js","webpack:///./node_modules/rxjs-compat/add/operator/defaultIfEmpty.js","webpack:///./node_modules/rxjs-compat/add/operator/delay.js","webpack:///./node_modules/rxjs-compat/add/operator/delayWhen.js","webpack:///./node_modules/rxjs-compat/add/operator/dematerialize.js","webpack:///./node_modules/rxjs-compat/add/operator/distinct.js","webpack:///./node_modules/rxjs-compat/add/operator/distinctUntilChanged.js","webpack:///./node_modules/rxjs-compat/add/operator/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs-compat/add/operator/do.js","webpack:///./node_modules/rxjs-compat/add/operator/elementAt.js","webpack:///./node_modules/rxjs-compat/add/operator/every.js","webpack:///./node_modules/rxjs-compat/add/operator/exhaust.js","webpack:///./node_modules/rxjs-compat/add/operator/exhaustMap.js","webpack:///./node_modules/rxjs-compat/add/operator/expand.js","webpack:///./node_modules/rxjs-compat/add/operator/filter.js","webpack:///./node_modules/rxjs-compat/add/operator/finally.js","webpack:///./node_modules/rxjs-compat/add/operator/find.js","webpack:///./node_modules/rxjs-compat/add/operator/findIndex.js","webpack:///./node_modules/rxjs-compat/add/operator/first.js","webpack:///./node_modules/rxjs-compat/add/operator/groupBy.js","webpack:///./node_modules/rxjs-compat/add/operator/ignoreElements.js","webpack:///./node_modules/rxjs-compat/add/operator/isEmpty.js","webpack:///./node_modules/rxjs-compat/add/operator/last.js","webpack:///./node_modules/rxjs-compat/add/operator/let.js","webpack:///./node_modules/rxjs-compat/add/operator/map.js","webpack:///./node_modules/rxjs-compat/add/operator/mapTo.js","webpack:///./node_modules/rxjs-compat/add/operator/materialize.js","webpack:///./node_modules/rxjs-compat/add/operator/max.js","webpack:///./node_modules/rxjs-compat/add/operator/merge.js","webpack:///./node_modules/rxjs-compat/add/operator/mergeAll.js","webpack:///./node_modules/rxjs-compat/add/operator/mergeMap.js","webpack:///./node_modules/rxjs-compat/add/operator/mergeMapTo.js","webpack:///./node_modules/rxjs-compat/add/operator/mergeScan.js","webpack:///./node_modules/rxjs-compat/add/operator/min.js","webpack:///./node_modules/rxjs-compat/add/operator/multicast.js","webpack:///./node_modules/rxjs-compat/add/operator/observeOn.js","webpack:///./node_modules/rxjs-compat/add/operator/onErrorResumeNext.js","webpack:///./node_modules/rxjs-compat/add/operator/pairwise.js","webpack:///./node_modules/rxjs-compat/add/operator/partition.js","webpack:///./node_modules/rxjs-compat/add/operator/pluck.js","webpack:///./node_modules/rxjs-compat/add/operator/publish.js","webpack:///./node_modules/rxjs-compat/add/operator/publishBehavior.js","webpack:///./node_modules/rxjs-compat/add/operator/publishLast.js","webpack:///./node_modules/rxjs-compat/add/operator/publishReplay.js","webpack:///./node_modules/rxjs-compat/add/operator/race.js","webpack:///./node_modules/rxjs-compat/add/operator/reduce.js","webpack:///./node_modules/rxjs-compat/add/operator/repeat.js","webpack:///./node_modules/rxjs-compat/add/operator/repeatWhen.js","webpack:///./node_modules/rxjs-compat/add/operator/retry.js","webpack:///./node_modules/rxjs-compat/add/operator/retryWhen.js","webpack:///./node_modules/rxjs-compat/add/operator/sample.js","webpack:///./node_modules/rxjs-compat/add/operator/sampleTime.js","webpack:///./node_modules/rxjs-compat/add/operator/scan.js","webpack:///./node_modules/rxjs-compat/add/operator/sequenceEqual.js","webpack:///./node_modules/rxjs-compat/add/operator/share.js","webpack:///./node_modules/rxjs-compat/add/operator/shareReplay.js","webpack:///./node_modules/rxjs-compat/add/operator/single.js","webpack:///./node_modules/rxjs-compat/add/operator/skip.js","webpack:///./node_modules/rxjs-compat/add/operator/skipLast.js","webpack:///./node_modules/rxjs-compat/add/operator/skipUntil.js","webpack:///./node_modules/rxjs-compat/add/operator/skipWhile.js","webpack:///./node_modules/rxjs-compat/add/operator/startWith.js","webpack:///./node_modules/rxjs-compat/add/operator/subscribeOn.js","webpack:///./node_modules/rxjs-compat/add/operator/switch.js","webpack:///./node_modules/rxjs-compat/add/operator/switchMap.js","webpack:///./node_modules/rxjs-compat/add/operator/switchMapTo.js","webpack:///./node_modules/rxjs-compat/add/operator/take.js","webpack:///./node_modules/rxjs-compat/add/operator/takeLast.js","webpack:///./node_modules/rxjs-compat/add/operator/takeUntil.js","webpack:///./node_modules/rxjs-compat/add/operator/takeWhile.js","webpack:///./node_modules/rxjs-compat/add/operator/throttle.js","webpack:///./node_modules/rxjs-compat/add/operator/throttleTime.js","webpack:///./node_modules/rxjs-compat/add/operator/timeInterval.js","webpack:///./node_modules/rxjs-compat/add/operator/timeout.js","webpack:///./node_modules/rxjs-compat/add/operator/timeoutWith.js","webpack:///./node_modules/rxjs-compat/add/operator/timestamp.js","webpack:///./node_modules/rxjs-compat/add/operator/toArray.js","webpack:///./node_modules/rxjs-compat/add/operator/toPromise.js","webpack:///./node_modules/rxjs-compat/add/operator/window.js","webpack:///./node_modules/rxjs-compat/add/operator/windowCount.js","webpack:///./node_modules/rxjs-compat/add/operator/windowTime.js","webpack:///./node_modules/rxjs-compat/add/operator/windowToggle.js","webpack:///./node_modules/rxjs-compat/add/operator/windowWhen.js","webpack:///./node_modules/rxjs-compat/add/operator/withLatestFrom.js","webpack:///./node_modules/rxjs-compat/add/operator/zip.js","webpack:///./node_modules/rxjs-compat/add/operator/zipAll.js","webpack:///./node_modules/rxjs-compat/operator/audit.js","webpack:///./node_modules/rxjs-compat/operator/auditTime.js","webpack:///./node_modules/rxjs-compat/operator/buffer.js","webpack:///./node_modules/rxjs-compat/operator/bufferCount.js","webpack:///./node_modules/rxjs-compat/operator/bufferTime.js","webpack:///./node_modules/rxjs-compat/operator/bufferToggle.js","webpack:///./node_modules/rxjs-compat/operator/bufferWhen.js","webpack:///./node_modules/rxjs-compat/operator/catch.js","webpack:///./node_modules/rxjs-compat/operator/combineAll.js","webpack:///./node_modules/rxjs-compat/operator/combineLatest.js","webpack:///./node_modules/rxjs-compat/operator/concat.js","webpack:///./node_modules/rxjs-compat/operator/concatAll.js","webpack:///./node_modules/rxjs-compat/operator/concatMap.js","webpack:///./node_modules/rxjs-compat/operator/concatMapTo.js","webpack:///./node_modules/rxjs-compat/operator/count.js","webpack:///./node_modules/rxjs-compat/operator/debounce.js","webpack:///./node_modules/rxjs-compat/operator/debounceTime.js","webpack:///./node_modules/rxjs-compat/operator/defaultIfEmpty.js","webpack:///./node_modules/rxjs-compat/operator/delay.js","webpack:///./node_modules/rxjs-compat/operator/delayWhen.js","webpack:///./node_modules/rxjs-compat/operator/dematerialize.js","webpack:///./node_modules/rxjs-compat/operator/distinct.js","webpack:///./node_modules/rxjs-compat/operator/distinctUntilChanged.js","webpack:///./node_modules/rxjs-compat/operator/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs-compat/operator/do.js","webpack:///./node_modules/rxjs-compat/operator/elementAt.js","webpack:///./node_modules/rxjs-compat/operator/every.js","webpack:///./node_modules/rxjs-compat/operator/exhaust.js","webpack:///./node_modules/rxjs-compat/operator/exhaustMap.js","webpack:///./node_modules/rxjs-compat/operator/expand.js","webpack:///./node_modules/rxjs-compat/operator/filter.js","webpack:///./node_modules/rxjs-compat/operator/finally.js","webpack:///./node_modules/rxjs-compat/operator/find.js","webpack:///./node_modules/rxjs-compat/operator/findIndex.js","webpack:///./node_modules/rxjs-compat/operator/first.js","webpack:///./node_modules/rxjs-compat/operator/groupBy.js","webpack:///./node_modules/rxjs-compat/operator/ignoreElements.js","webpack:///./node_modules/rxjs-compat/operator/isEmpty.js","webpack:///./node_modules/rxjs-compat/operator/last.js","webpack:///./node_modules/rxjs-compat/operator/let.js","webpack:///./node_modules/rxjs-compat/operator/map.js","webpack:///./node_modules/rxjs-compat/operator/mapTo.js","webpack:///./node_modules/rxjs-compat/operator/materialize.js","webpack:///./node_modules/rxjs-compat/operator/max.js","webpack:///./node_modules/rxjs-compat/operator/merge.js","webpack:///./node_modules/rxjs-compat/operator/mergeAll.js","webpack:///./node_modules/rxjs-compat/operator/mergeMap.js","webpack:///./node_modules/rxjs-compat/operator/mergeMapTo.js","webpack:///./node_modules/rxjs-compat/operator/mergeScan.js","webpack:///./node_modules/rxjs-compat/operator/min.js","webpack:///./node_modules/rxjs-compat/operator/multicast.js","webpack:///./node_modules/rxjs-compat/operator/observeOn.js","webpack:///./node_modules/rxjs-compat/operator/onErrorResumeNext.js","webpack:///./node_modules/rxjs-compat/operator/pairwise.js","webpack:///./node_modules/rxjs-compat/operator/partition.js","webpack:///./node_modules/rxjs-compat/operator/pluck.js","webpack:///./node_modules/rxjs-compat/operator/publish.js","webpack:///./node_modules/rxjs-compat/operator/publishBehavior.js","webpack:///./node_modules/rxjs-compat/operator/publishLast.js","webpack:///./node_modules/rxjs-compat/operator/publishReplay.js","webpack:///./node_modules/rxjs-compat/operator/race.js","webpack:///./node_modules/rxjs-compat/operator/reduce.js","webpack:///./node_modules/rxjs-compat/operator/repeat.js","webpack:///./node_modules/rxjs-compat/operator/repeatWhen.js","webpack:///./node_modules/rxjs-compat/operator/retry.js","webpack:///./node_modules/rxjs-compat/operator/retryWhen.js","webpack:///./node_modules/rxjs-compat/operator/sample.js","webpack:///./node_modules/rxjs-compat/operator/sampleTime.js","webpack:///./node_modules/rxjs-compat/operator/scan.js","webpack:///./node_modules/rxjs-compat/operator/sequenceEqual.js","webpack:///./node_modules/rxjs-compat/operator/share.js","webpack:///./node_modules/rxjs-compat/operator/shareReplay.js","webpack:///./node_modules/rxjs-compat/operator/single.js","webpack:///./node_modules/rxjs-compat/operator/skip.js","webpack:///./node_modules/rxjs-compat/operator/skipLast.js","webpack:///./node_modules/rxjs-compat/operator/skipUntil.js","webpack:///./node_modules/rxjs-compat/operator/skipWhile.js","webpack:///./node_modules/rxjs-compat/operator/startWith.js","webpack:///./node_modules/rxjs-compat/operator/subscribeOn.js","webpack:///./node_modules/rxjs-compat/operator/switch.js","webpack:///./node_modules/rxjs-compat/operator/switchMap.js","webpack:///./node_modules/rxjs-compat/operator/switchMapTo.js","webpack:///./node_modules/rxjs-compat/operator/take.js","webpack:///./node_modules/rxjs-compat/operator/takeLast.js","webpack:///./node_modules/rxjs-compat/operator/takeUntil.js","webpack:///./node_modules/rxjs-compat/operator/takeWhile.js","webpack:///./node_modules/rxjs-compat/operator/throttle.js","webpack:///./node_modules/rxjs-compat/operator/throttleTime.js","webpack:///./node_modules/rxjs-compat/operator/timeInterval.js","webpack:///./node_modules/rxjs-compat/operator/timeout.js","webpack:///./node_modules/rxjs-compat/operator/timeoutWith.js","webpack:///./node_modules/rxjs-compat/operator/timestamp.js","webpack:///./node_modules/rxjs-compat/operator/toArray.js","webpack:///./node_modules/rxjs-compat/operator/window.js","webpack:///./node_modules/rxjs-compat/operator/windowCount.js","webpack:///./node_modules/rxjs-compat/operator/windowTime.js","webpack:///./node_modules/rxjs-compat/operator/windowToggle.js","webpack:///./node_modules/rxjs-compat/operator/windowWhen.js","webpack:///./node_modules/rxjs-compat/operator/withLatestFrom.js","webpack:///./node_modules/rxjs-compat/operator/zip.js","webpack:///./node_modules/rxjs-compat/operator/zipAll.js","webpack:///./node_modules/rxjs/Rx.js","webpack:///./node_modules/rxjs/_esm5/ajax/index.js","webpack:///./node_modules/rxjs/_esm5/index.js","webpack:///./node_modules/rxjs/_esm5/internal-compatibility/index.js","webpack:///./node_modules/rxjs/_esm5/internal/AsyncSubject.js","webpack:///./node_modules/rxjs/_esm5/internal/BehaviorSubject.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Notification.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/bindCallback.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/combineLatest.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/concat.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/defer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/AjaxObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/WebSocketSubject.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/ajax.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/webSocket.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/forkJoin.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/from.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEvent.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/generate.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/iif.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/interval.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/merge.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/never.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/pairs.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/race.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/range.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/scalar.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/throwError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/timer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/using.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/zip.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/audit.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/auditTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/buffer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferCount.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/catchError.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/combineAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/combineLatest.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concat.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/count.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/debounce.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/debounceTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/delay.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/delayWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/dematerialize.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/distinct.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/elementAt.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/every.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/exhaust.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/expand.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/finalize.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/find.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/findIndex.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/first.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/groupBy.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/isEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/last.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/materialize.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/max.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/merge.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeScan.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/min.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/multicast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/pairwise.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/partition.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/pluck.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publish.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publishLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publishReplay.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/race.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/reduce.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/refCount.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/repeat.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/retry.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/retryWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/sample.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/sampleTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/scan.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/share.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/shareReplay.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/single.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skip.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skipLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skipUntil.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skipWhile.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/startWith.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/take.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeUntil.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeWhile.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/tap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throttle.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throttleTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timeInterval.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timeout.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timestamp.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/toArray.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/window.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowCount.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowToggle.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/zip.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/zipAll.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/asap.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/async.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/testing/ColdObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/testing/HotObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/testing/SubscriptionLog.js","webpack:///./node_modules/rxjs/_esm5/internal/testing/SubscriptionLoggable.js","webpack:///./node_modules/rxjs/_esm5/internal/testing/TestScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/EmptyError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/Immediate.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/TimeoutError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/applyMixins.js","webpack:///./node_modules/rxjs/_esm5/internal/util/errorObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/identity.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isDate.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isNumeric.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/not.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/util/root.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/tryCatch.js","webpack:///./node_modules/rxjs/_esm5/operators/index.js","webpack:///./node_modules/rxjs/_esm5/testing/index.js","webpack:///./node_modules/rxjs/_esm5/webSocket/index.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/main.js"],"names":["Object","defineProperty","exports","value","rxjs_1","require","Observable","Subject","internal_compatibility_1","AnonymousSubject","internal_compatibility_2","config","rxjs_2","Subscription","ReplaySubject","BehaviorSubject","Notification","EmptyError","ArgumentOutOfRangeError","ObjectUnsubscribedError","UnsubscriptionError","pipe","testing_1","TestScheduler","rxjs_3","Subscriber","AsyncSubject","ConnectableObservable","TimeoutError","VirtualTimeScheduler","ajax_1","AjaxResponse","AjaxError","AjaxTimeoutError","rxjs_4","internal_compatibility_3","internal_compatibility_4","TimeInterval","Timestamp","_operators","operators","Scheduler","asap","asapScheduler","queue","queueScheduler","animationFrame","animationFrameScheduler","async","asyncScheduler","Symbol","rxSubscriber","observable","iterator","bindCallback","bindNodeCallback","combineLatest","concat","defer","ajax","webSocket_1","webSocket","empty","forkJoin","from","fromEvent","fromEventPattern","fromPromise","generate","if","iif","interval","merge","staticNever","NEVER","never","of","onErrorResumeNext","pairs","race","range","throw","throwError","timer","using","zip","audit_1","prototype","audit","auditTime_1","auditTime","buffer_1","buffer","bufferCount_1","bufferCount","bufferTime_1","bufferTime","bufferToggle_1","bufferToggle","bufferWhen_1","bufferWhen","catch_1","catch","_catch","combineAll_1","combineAll","combineLatest_1","concat_1","concatAll_1","concatAll","concatMap_1","concatMap","concatMapTo_1","concatMapTo","count_1","count","debounce_1","debounce","debounceTime_1","debounceTime","defaultIfEmpty_1","defaultIfEmpty","delay_1","delay","delayWhen_1","delayWhen","dematerialize_1","dematerialize","distinct_1","distinct","distinctUntilChanged_1","distinctUntilChanged","distinctUntilKeyChanged_1","distinctUntilKeyChanged","do_1","do","_do","elementAt_1","elementAt","every_1","every","exhaust_1","exhaust","exhaustMap_1","exhaustMap","expand_1","expand","filter_1","filter","finally_1","finally","_finally","find_1","find","findIndex_1","findIndex","first_1","first","groupBy_1","groupBy","ignoreElements_1","ignoreElements","isEmpty_1","isEmpty","last_1","last","let_1","let","letProto","letBind","map_1","map","mapTo_1","mapTo","materialize_1","materialize","max_1","max","merge_1","mergeAll_1","mergeAll","mergeMap_1","mergeMap","flatMap","mergeMapTo_1","flatMapTo","mergeMapTo","mergeScan_1","mergeScan","min_1","min","multicast_1","multicast","observeOn_1","observeOn","onErrorResumeNext_1","pairwise_1","pairwise","partition_1","partition","pluck_1","pluck","publish_1","publish","publishBehavior_1","publishBehavior","publishLast_1","publishLast","publishReplay_1","publishReplay","race_1","reduce_1","reduce","repeat_1","repeat","repeatWhen_1","repeatWhen","retry_1","retry","retryWhen_1","retryWhen","sample_1","sample","sampleTime_1","sampleTime","scan_1","scan","sequenceEqual_1","sequenceEqual","share_1","share","shareReplay_1","shareReplay","single_1","single","skip_1","skip","skipLast_1","skipLast","skipUntil_1","skipUntil","skipWhile_1","skipWhile","startWith_1","startWith","subscribeOn_1","subscribeOn","switch_1","switch","_switch","switchMap_1","switchMap","switchMapTo_1","switchMapTo","take_1","take","takeLast_1","takeLast","takeUntil_1","takeUntil","takeWhile_1","takeWhile","throttle_1","throttle","throttleTime_1","throttleTime","timeInterval_1","timeInterval","timeout_1","timeout","timeoutWith_1","timeoutWith","timestamp_1","timestamp","toArray_1","toArray","window_1","window","windowCount_1","windowCount","windowTime_1","windowTime","windowToggle_1","windowToggle","windowWhen_1","windowWhen","withLatestFrom_1","withLatestFrom","zip_1","zipProto","zipAll_1","zipAll","operators_1","durationSelector","duration","scheduler","closingNotifier","bufferSize","startBufferEvery","bufferTimeSpan","length","arguments","isScheduler","bufferCreationInterval","maxBufferSize","Number","POSITIVE_INFINITY","openings","closingSelector","selector","catchError","project","observables","_i","pop","isArray","slice","lift","call","apply","CombineLatestOperator","innerObservable","predicate","dueTime","defaultValue","delayDurationSelector","subscriptionDelay","keySelector","flushes","compare","key","nextOrObserver","error","complete","tap","index","undefined","thisArg","concurrent","callback","finalize","args","elementSelector","subjectSelector","func","comparer","accumulator","seed","subjectOrSubjectFactory","nextSources","properties","selectorOrScheduler","notifier","period","compareTo","comparor","array","switchAll","defaultThrottleConfig","due","withObservable","windowBoundaries","windowSize","startWindowEvery","windowTimeSpan","windowCreationInterval","maxWindowSize","isNumeric","__export","m","p","hasOwnProperty","GroupedObservable","VirtualAction","noop","identity","isObservable","EMPTY","InnerSubscriber","OuterSubscriber","SubjectSubscription","fromIterable","ajaxGet","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","AjaxObservable","AjaxSubscriber","WebSocketSubject","dispatch","SubscribeOnObservable","Immediate","applyMixins","errorObject","hostReportError","isArrayLike","isDate","isFunction","isIterable","isObject","isInteropObservable","isPromise","not","root","subscribeTo","subscribeToArray","subscribeToIterable","subscribeToObservable","subscribeToPromise","subscribeToResult","toSubscriber","tryCatch","tslib_1","_super","__extends","_this","hasNext","hasCompleted","_subscribe","subscriber","hasError","thrownError","next","_value","get","getValue","enumerable","configurable","subscription","closed","parent","outerValue","outerIndex","_next","notifyNext","_error","notifyError","unsubscribe","_complete","notifyComplete","kind","hasValue","observe","observer","accept","toObservable","Error","createNext","undefinedValueNotification","createError","err","createComplete","completeNotification","subscribe","_isScalar","operator","source","observerOrNext","sink","add","syncErrorThrowable","_trySubscribe","useDeprecatedSynchronousErrorHandling","syncErrorThrown","syncErrorValue","forEach","promiseCtor","getPromiseCtor","resolve","reject","Symbol_observable","operations","toPromise","x","create","Promise","innerValue","innerIndex","innerSub","destination","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","push","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","len","isStopped","observers","ObserveOnSubscriber","i","now","eventsCount","spliceCount","time","Math","splice","SchedulerAction","schedule","work","state","Date","SubjectSubscriber","rxSubscriberSymbol","subject","copy","asObservable","subscriberIndex","indexOf","destinationOrNext","emptyObserver","isTrustedSubscriber","trustedSubscriber","SafeSubscriber","_unsubscribeAndRecycle","_a","_parent","_parents","_parentSubscriber","context","bind","_context","__tryOrUnsub","__tryOrSetError","wrappedComplete","fn","_unsubscribe","obj","_subscriptions","hasErrors","errors","remove","trial","e","flattenUnsubscriptionErrors","sub","teardown","_addParent","tmp","subscriptions","subscriptionIndex","errs","_enable_super_gross_mode_that_will_cause_bad_things","console","warn","stack","log","subjectFactory","_refCount","_isComplete","getSubject","_subject","connect","connection","_connection","ConnectableSubscriber","refCount","connectableProto","connectableObservableDescriptor","writable","connectable","RefCountOperator","refCounter","RefCountSubscriber","sharedConnection","delayTime","arg","callbackFunc","resultSelector","params","handler","innerArgs","self","dispatchNext","dispatchError","NONE","CombineLatestSubscriber","active","values","toRespond","unused","oldVal","_tryResultSelector","result","observableFactory","input","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","url","headers","method","body","mapResponse","response","responseType","urlOrRequest","request","createXHR","crossDomain","withCredentials","prop","post","delete","put","patch","getJSON","done","FormData","serializeBody","send","xhr","_b","user","password","setupEvents","open","setHeaders","contentType","splitIndex","substring","keys","encodeURIComponent","join","JSON","stringify","setRequestHeader","progressSubscriber","xhrTimeout","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","onerror","xhrReadyStateChange","readyState","status_1","status","responseText","onreadystatechange","abort","originalEvent","parseXhrResponse","message","name","setPrototypeOf","parse","responseXML","DEFAULT_WEBSOCKET_CONFIG","deserializer","data","serializer","WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT","urlConfigOrSource","_config","__assign","WebSocketCtor","WebSocket","_output","sock","_resetState","_socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","socket","close","onopen","openObserver","msg","closingObserver","code","reason","TypeError","onclose","closeObserver","wasClean","onmessage","emptyScheduled","sources","ForkJoinSubscriber","completed","haveValues","Array","innerSubscription","_hasValue","fromArray","toString","target","eventName","options","setupSubscription","sourceObj","isEventTarget","source_1","addEventListener","removeEventListener","isJQueryStyleEventEmitter","source_2","on","off","isNodeStyleEventEmitter","source_3","addListener","removeListener","addHandler","removeHandler","retValue","return","Symbol_iterator","fromObservable","then","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","initialState","conditionResult","needIterate","trueResult","falseResult","counter","remainder","subNext","RaceOperator","RaceSubscriber","hasFirst","start","scalar","periodOrScheduler","resourceFactory","resource","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","isComplete","auditOperatorFunction","AuditOperator","AuditSubscriber","throttled","clearThrottle","bufferOperatorFunction","BufferOperator","BufferSubscriber","bufferCountOperatorFunction","BufferCountOperator","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","buffers","bufferTimeOperatorFunction","BufferTimeOperator","BufferTimeSubscriber","Context","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","context_1","onBufferFull","context_2","closeContext","spliceIndex","prevContext","action","bufferToggleOperatorFunction","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","catchErrorOperatorFunction","CatchOperator","caught","CatchSubscriber","err2","none","concatStatic","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","durationSubscription","_tryNext","emitValue","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","absoluteDelay","delayFor","abs","DelayOperator","DelaySubscriber","errored","notification","_schedule","scheduleNotification","DelayMessage","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","dematerializeOperatorFunction","DeMaterializeOperator","DeMaterializeSubscriber","DistinctOperator","DistinctSubscriber","Set","clear","_useKeySelector","_finalizeNext","has","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","hasDefaultValue","v","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","a","b","ii","ExhauseMapOperator","ExhaustMapSubscriber","tryNext","ExpandOperator","ExpandSubscriber","subscribeToProjection","filterOperatorFunction","FilterOperator","FilterSubscriber","FinallyOperator","FinallySubscriber","FindValueOperator","yieldIndex","FindValueSubscriber","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","Map","group","element","set","groupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","ignoreElementsOperatorFunction","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","mapOperation","MapOperator","MapSubscriber","MapToOperator","MapToSubscriber","materializeOperatorFunction","MaterializeOperator","MaterializeSubscriber","mergeStatic","MergeMapOperator","MergeMapSubscriber","_innerSub","ish","MergeScanOperator","MergeScanSubscriber","acc","multicastOperatorFunction","MulticastOperator","observeOnOperatorFunction","ObserveOnOperator","scheduleMessage","ObserveOnMessage","onErrorResumeNextStatic","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseOperator","PairwiseSubscriber","hasPrev","prev","plucker","props","mapper","currentProp","raceOperatorFunction","raceStatic","reduceOperatorFunctionWithSeed","reduceOperatorFunction","refCountOperatorFunction","RepeatOperator","RepeatSubscriber","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","hasSeed","scanOperatorFunction","ScanOperator","ScanSubscriber","_seed","SequenceEqualOperator","SequenceEqualSubscriber","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","_c","areEqual","nextB","shareSubjectFactory","shareReplayOperator","shareReplayOperation","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","total","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","ring","oldValue","SkipUntilOperator","SkipUntilSubscriber","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","subscribeOnOperatorFunction","SubscribeOnOperator","SwitchMapOperator","SwitchMapSubscriber","TakeOperator","TakeSubscriber","takeLastOperatorFunction","TakeLastOperator","TakeLastSubscriber","idx","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","tapOperatorFunction","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_sendValue","_throttled","tryDurationSelector","throttlingDone","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","throwIfEmpty","errorFactory","defaultErrorFactory","current","absoluteTimeout","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","toArrayReducer","arr","item","windowOperatorFunction","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowCountOperatorFunction","WindowCountOperator","WindowCountSubscriber","windows","c","windowTimeOperatorFunction","WindowTimeOperator","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","context_3","context_4","inner","windowWhenOperatorFunction","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","_tryProject","zipOperatorFunction","zipStatic","Action","AnimationFrameAction","requestAsyncId","id","actions","scheduled","requestAnimationFrame","flush","recycleAsyncId","cancelAnimationFrame","AsyncAction","AnimationFrameScheduler","execute","AsyncScheduler","AsapAction","setImmediate","clearImmediate","AsapScheduler","pending","setInterval","clearInterval","_execute","errorValue","delegate","QueueAction","QueueScheduler","maxFrames","frame","frameTimeFactor","sort","sortActions","getSymbolIterator","$$iterator","for","$$rxSubscriber","ColdObservable","messages","logSubscribedFrame","logUnsubscribedFrame","scheduleMessages","messagesLength","SubscriptionLoggable","HotObservable","setup","SubscriptionLog","subscribedFrame","unsubscribedFrame","subscriptionLogs","oldSubscriptionLog","defaultMaxFrame","assertDeepEqual","hotObservables","coldObservables","flushTests","runMode","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","unsubscriptionMarbles","actual","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","flushTestsCopy","l","test_1","groupStart","subscriptionFrame","_loop_1","nextFrame","advanceFrameBy","match","parseFloat","unit","durationInMs","this_1","out_i_1","materializeInnerObservables","testMessages","subIndex","replace","_loop_2","this_2","out_i_2","run","prevFrameTimeFactor","prevMaxFrames","helpers","hot","ret","nextHandle","tasksByHandle","runIfPresent","handle","cb","derivedCtor","baseCtors","baseCtor","propertyKeys","getOwnPropertyNames","j","len2","name_1","setTimeout","isNaN","val","pred","notPred","pipeFromArray","fns","piped","__window","__self","WorkerGlobalScope","__global","global","_root","iterable","obs","promise","outerSubscriber","tryCatchTarget","tryCatcher","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","__proto__","d","__","constructor","assign","t","s","n","getOwnPropertySymbols","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","_arguments","P","generator","fulfilled","step","rejected","_","label","sent","trys","ops","f","g","verb","op","o","ar","asyncIterator","q","resume","settle","fulfill","cooked","raw","mod","__esModule","k","default","Function","eval","module","Rx","offset","box_x","box_y","battle_y","battle_x","bot_move","canvas","document","getElementById","cnt","getContext","catchit","Warrior","radius","color","offsetX","offsetY","drawit","beginPath","arc","PI","fillStyle","fill","closePath","Init","human","bot","Reset","randomMove","floor","random","width","height","keyDownHandler","keyCode","Left","Up","Right","Down","pauza","keyUpHandler","gotit","dx","dy","gamestatus","game_move","alert","theGame","clearRect"],"mappings":"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;mBAEA/D,M;;;;;;;;;;;;;;;;;;;;;;;;;mBC9DAA,M;;;;;;;;;4BACA+W,e;;;;;;;;;4BACAC,e;;;;;;;;;sBACAlV,S;;;;;;;;;oBACAhC,gB;;;;;;;;;gCACAmX,mB;;;;;;;;;uBACAnW,U;;;;;;;;;wBACA0C,W;;;;;;;;;yBACA0T,Y;;;;;;;;;iBACAlU,I;;;;;;;;;sBACAE,S;;;;;;;;;2BACAiU,O;;;;;;2BAASC,Q;;;;;;2BAAUC,U;;;;;;2BAAYC,O;;;;;;2BAASC,S;;;;;;2BAAWC,W;;;;;;2BAAaC,c;;;;;;2BAAgBC,c;;;;;;2BAAgBtW,Y;;;;;;2BAAcC,S;;;;;;2BAAWC,gB;;;;;;;;;6BACzHqW,gB;;;;;;;;;0BACAtE,qB;;;;;;;;;kBACAuE,Q;;;;;;;;;kCACAC,qB;;;;;;;;;sBACAlW,S;;;;;;;;;yBACAD,Y;;;;;;;;;oBACA+U,iB;;;;;;;;;qBACAd,qB;;;;;;;;;yBACAnT,Y;;;;;;;;;qBACAE,Q;;;;;;;;;uBACAD,U;;;;;;;;;oCACAlC,uB;;;;;;;;;uBACAD,U;;;;;;;;;sBACAwX,S;;;;;;;;;oCACAtX,uB;;;;;;;;;yBACAS,Y;;;;;;;;;gCACAR,mB;;;;;;;;;wBACAsX,W;;;;;;;;;wBACAC,W;;;;;;;;;4BACAC,e;;;;;;;;;qBACArB,Q;;;;;;;;;oBACA5D,O;;;;;;;;;wBACAkF,W;;;;;;;;;mBACAC,M;;;;;;;;;uBACAC,U;;;;;;;;;uBACAC,U;;;;;;;;;sBACAjC,S;;;;;;;;;qBACAkC,Q;;;;;;;;;gCACAC,mB;;;;;;;;;sBACAC,S;;;;;;;;;wBACArG,W;;;;;;;;;iBACAwE,I;;;;;;;;;gBACA8B,G;;;;;;;;;iBACA/X,I;;;;;;;;;iBACAgY,I;;;;;;;;;wBACAC,W;;;;;;;;;6BACAC,gB;;;;;;;;;gCACAC,mB;;;;;;;;;kCACAC,qB;;;;;;;;;+BACAC,kB;;;;;;;;;8BACAC,iB;;;;;;;;;yBACAC,Y;;;;;;;;;qBACAC,Q;;;;;;;;;;;;;;;;;;;;;ACtDT;;IAAYC,O;;AACZ;;AACA;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;;;;;;;;;gBACAM,G;;;;;;;;;kBACAE,K;;;;;;;;;wBACAE,W;;;;;;;;;gBACAE,G;;;;;;;;;kBACAzG,K;;;;;;;;;qBACA4G,Q;;;;;;;;;qBACAE,Q;;;;;;qBACAA,Q;;;;;;;;;uBACAI,U;;;;;;;;;sBACAE,S;;;;;;;;;gBACAE,G;;;;;;;;;sBACAE,S;;;;;;;;;sBACAE,S;;;;;;;;;8BACArH,iB;;;;;;;;;qBACAwH,Q;;;;;;;;;sBACAE,S;;;;;;;;;kBACAE,K;;;;;;;;;oBACAE,O;;;;;;;;;4BACAE,e;;;;;;;;;wBACAE,W;;;;;;;;;0BACAE,a;;;;;;;;;iBACAlI,I;;;;;;;;;mBACAqI,M;;;;;;;;;mBACAE,M;;;;;;;;;uBACAE,U;;;;;;;;;kBACAE,K;;;;;;;;;sBACAE,S;;;;;;;;;qBACAuV,Q;;;;;;;;;mBACArV,M;;;;;;;;;uBACAE,U;;;;;;;;;iBACAE,I;;;;;;;;;0BACAE,a;;;;;;;;;kBACAE,K;;;;;;;;;wBACAE,W;;;;;;;;;mBACAE,M;;;;;;;;;iBACAE,I;;;;;;;;;qBACAE,Q;;;;;;;;;sBACAE,S;;;;;;;;;sBACAE,S;;;;;;;;;sBACAE,S;;;;;;;;;wBACAE,W;;;;;;;;;sBACA+G,S;;;;;;;;;sBACA1G,S;;;;;;;;;wBACAE,W;;;;;;;;;iBACAE,I;;;;;;;;;qBACAE,Q;;;;;;;;;sBACAE,S;;;;;;;;;sBACAE,S;;;;;;;;;gBACAyE,G;;;;;;;;;qBACAvE,Q;;;;;;;;;yBACAE,Y;;;;;;;;;yBACA+wB,Y;;;;;;;;;yBACA7wB,Y;;;;;;;;;oBACAE,O;;;;;;;;;wBACAE,W;;;;;;;;;sBACAE,S;;;;;;;;;oBACAE,O;;;;;;;;;mBACAE,M;;;;;;;;;wBACAE,W;;;;;;;;;uBACAE,U;;;;;;;;;yBACAE,Y;;;;;;;;;uBACAE,U;;;;;;;;;2BACAE,c;;;;;;;;;gBACA1M,G;;;;;;;;;mBACA8M,M;;;;;;;;;;;;;;;;;;;;;;;;;0BCvGA5Q,a;;;;;;;;;;;;;;;;;;;;;;;;;sBCAAsC,S;;;;;;;;;6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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\nexports.Subject = rxjs_1.Subject;\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nexports.AnonymousSubject = internal_compatibility_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\nvar internal_compatibility_2 = require(\"rxjs/internal-compatibility\");\nexports.config = internal_compatibility_2.config;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire(\"./add/observable/bindCallback\");\nrequire(\"./add/observable/bindNodeCallback\");\nrequire(\"./add/observable/combineLatest\");\nrequire(\"./add/observable/concat\");\nrequire(\"./add/observable/defer\");\nrequire(\"./add/observable/empty\");\nrequire(\"./add/observable/forkJoin\");\nrequire(\"./add/observable/from\");\nrequire(\"./add/observable/fromEvent\");\nrequire(\"./add/observable/fromEventPattern\");\nrequire(\"./add/observable/fromPromise\");\nrequire(\"./add/observable/generate\");\nrequire(\"./add/observable/if\");\nrequire(\"./add/observable/interval\");\nrequire(\"./add/observable/merge\");\nrequire(\"./add/observable/race\");\nrequire(\"./add/observable/never\");\nrequire(\"./add/observable/of\");\nrequire(\"./add/observable/onErrorResumeNext\");\nrequire(\"./add/observable/pairs\");\nrequire(\"./add/observable/range\");\nrequire(\"./add/observable/using\");\nrequire(\"./add/observable/throw\");\nrequire(\"./add/observable/timer\");\nrequire(\"./add/observable/zip\");\n//dom\nrequire(\"./add/observable/dom/ajax\");\nrequire(\"./add/observable/dom/webSocket\");\n//internal/operators\nrequire(\"./add/operator/buffer\");\nrequire(\"./add/operator/bufferCount\");\nrequire(\"./add/operator/bufferTime\");\nrequire(\"./add/operator/bufferToggle\");\nrequire(\"./add/operator/bufferWhen\");\nrequire(\"./add/operator/catch\");\nrequire(\"./add/operator/combineAll\");\nrequire(\"./add/operator/combineLatest\");\nrequire(\"./add/operator/concat\");\nrequire(\"./add/operator/concatAll\");\nrequire(\"./add/operator/concatMap\");\nrequire(\"./add/operator/concatMapTo\");\nrequire(\"./add/operator/count\");\nrequire(\"./add/operator/dematerialize\");\nrequire(\"./add/operator/debounce\");\nrequire(\"./add/operator/debounceTime\");\nrequire(\"./add/operator/defaultIfEmpty\");\nrequire(\"./add/operator/delay\");\nrequire(\"./add/operator/delayWhen\");\nrequire(\"./add/operator/distinct\");\nrequire(\"./add/operator/distinctUntilChanged\");\nrequire(\"./add/operator/distinctUntilKeyChanged\");\nrequire(\"./add/operator/do\");\nrequire(\"./add/operator/exhaust\");\nrequire(\"./add/operator/exhaustMap\");\nrequire(\"./add/operator/expand\");\nrequire(\"./add/operator/elementAt\");\nrequire(\"./add/operator/filter\");\nrequire(\"./add/operator/finally\");\nrequire(\"./add/operator/find\");\nrequire(\"./add/operator/findIndex\");\nrequire(\"./add/operator/first\");\nrequire(\"./add/operator/groupBy\");\nrequire(\"./add/operator/ignoreElements\");\nrequire(\"./add/operator/isEmpty\");\nrequire(\"./add/operator/audit\");\nrequire(\"./add/operator/auditTime\");\nrequire(\"./add/operator/last\");\nrequire(\"./add/operator/let\");\nrequire(\"./add/operator/every\");\nrequire(\"./add/operator/map\");\nrequire(\"./add/operator/mapTo\");\nrequire(\"./add/operator/materialize\");\nrequire(\"./add/operator/max\");\nrequire(\"./add/operator/merge\");\nrequire(\"./add/operator/mergeAll\");\nrequire(\"./add/operator/mergeMap\");\nrequire(\"./add/operator/mergeMapTo\");\nrequire(\"./add/operator/mergeScan\");\nrequire(\"./add/operator/min\");\nrequire(\"./add/operator/multicast\");\nrequire(\"./add/operator/observeOn\");\nrequire(\"./add/operator/onErrorResumeNext\");\nrequire(\"./add/operator/pairwise\");\nrequire(\"./add/operator/partition\");\nrequire(\"./add/operator/pluck\");\nrequire(\"./add/operator/publish\");\nrequire(\"./add/operator/publishBehavior\");\nrequire(\"./add/operator/publishReplay\");\nrequire(\"./add/operator/publishLast\");\nrequire(\"./add/operator/race\");\nrequire(\"./add/operator/reduce\");\nrequire(\"./add/operator/repeat\");\nrequire(\"./add/operator/repeatWhen\");\nrequire(\"./add/operator/retry\");\nrequire(\"./add/operator/retryWhen\");\nrequire(\"./add/operator/sample\");\nrequire(\"./add/operator/sampleTime\");\nrequire(\"./add/operator/scan\");\nrequire(\"./add/operator/sequenceEqual\");\nrequire(\"./add/operator/share\");\nrequire(\"./add/operator/shareReplay\");\nrequire(\"./add/operator/single\");\nrequire(\"./add/operator/skip\");\nrequire(\"./add/operator/skipLast\");\nrequire(\"./add/operator/skipUntil\");\nrequire(\"./add/operator/skipWhile\");\nrequire(\"./add/operator/startWith\");\nrequire(\"./add/operator/subscribeOn\");\nrequire(\"./add/operator/switch\");\nrequire(\"./add/operator/switchMap\");\nrequire(\"./add/operator/switchMapTo\");\nrequire(\"./add/operator/take\");\nrequire(\"./add/operator/takeLast\");\nrequire(\"./add/operator/takeUntil\");\nrequire(\"./add/operator/takeWhile\");\nrequire(\"./add/operator/throttle\");\nrequire(\"./add/operator/throttleTime\");\nrequire(\"./add/operator/timeInterval\");\nrequire(\"./add/operator/timeout\");\nrequire(\"./add/operator/timeoutWith\");\nrequire(\"./add/operator/timestamp\");\nrequire(\"./add/operator/toArray\");\nrequire(\"./add/operator/toPromise\");\nrequire(\"./add/operator/window\");\nrequire(\"./add/operator/windowCount\");\nrequire(\"./add/operator/windowTime\");\nrequire(\"./add/operator/windowToggle\");\nrequire(\"./add/operator/windowWhen\");\nrequire(\"./add/operator/withLatestFrom\");\nrequire(\"./add/operator/zip\");\nrequire(\"./add/operator/zipAll\");\n/* tslint:disable:no-unused-variable */\nvar rxjs_2 = require(\"rxjs\");\nexports.Subscription = rxjs_2.Subscription;\nexports.ReplaySubject = rxjs_2.ReplaySubject;\nexports.BehaviorSubject = rxjs_2.BehaviorSubject;\nexports.Notification = rxjs_2.Notification;\nexports.EmptyError = rxjs_2.EmptyError;\nexports.ArgumentOutOfRangeError = rxjs_2.ArgumentOutOfRangeError;\nexports.ObjectUnsubscribedError = rxjs_2.ObjectUnsubscribedError;\nexports.UnsubscriptionError = rxjs_2.UnsubscriptionError;\nexports.pipe = rxjs_2.pipe;\nvar testing_1 = require(\"rxjs/testing\");\nexports.TestScheduler = testing_1.TestScheduler;\nvar rxjs_3 = require(\"rxjs\");\nexports.Subscriber = rxjs_3.Subscriber;\nexports.AsyncSubject = rxjs_3.AsyncSubject;\nexports.ConnectableObservable = rxjs_3.ConnectableObservable;\nexports.TimeoutError = rxjs_3.TimeoutError;\nexports.VirtualTimeScheduler = rxjs_3.VirtualTimeScheduler;\nvar ajax_1 = require(\"rxjs/ajax\");\nexports.AjaxResponse = ajax_1.AjaxResponse;\nexports.AjaxError = ajax_1.AjaxError;\nexports.AjaxTimeoutError = ajax_1.AjaxTimeoutError;\nvar rxjs_4 = require(\"rxjs\");\nvar internal_compatibility_3 = require(\"rxjs/internal-compatibility\");\nvar internal_compatibility_4 = require(\"rxjs/internal-compatibility\");\nexports.TimeInterval = internal_compatibility_4.TimeInterval;\nexports.Timestamp = internal_compatibility_4.Timestamp;\nvar _operators = require(\"rxjs/operators\");\nexports.operators = _operators;\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: rxjs_4.asapScheduler,\n    queue: rxjs_4.queueScheduler,\n    animationFrame: rxjs_4.animationFrameScheduler,\n    async: rxjs_4.asyncScheduler\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: internal_compatibility_3.rxSubscriber,\n    observable: internal_compatibility_3.observable,\n    iterator: internal_compatibility_3.iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.bindCallback = rxjs_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.bindNodeCallback = rxjs_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.combineLatest = rxjs_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.concat = rxjs_1.concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.defer = rxjs_1.defer;\n//# sourceMappingURL=defer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar ajax_1 = require(\"rxjs/ajax\");\nrxjs_1.Observable.ajax = ajax_1.ajax;\n//# sourceMappingURL=ajax.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar webSocket_1 = require(\"rxjs/webSocket\");\nrxjs_1.Observable.webSocket = webSocket_1.webSocket;\n//# sourceMappingURL=webSocket.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.empty = rxjs_1.empty;\n//# sourceMappingURL=empty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.forkJoin = rxjs_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.from = rxjs_1.from;\n//# sourceMappingURL=from.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromEvent = rxjs_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromEventPattern = rxjs_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromPromise = rxjs_1.from;\n//# sourceMappingURL=fromPromise.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.generate = rxjs_1.generate;\n//# sourceMappingURL=generate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.if = rxjs_1.iif;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.interval = rxjs_1.interval;\n//# sourceMappingURL=interval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.merge = rxjs_1.merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nfunction staticNever() {\n    return rxjs_1.NEVER;\n}\nexports.staticNever = staticNever;\nrxjs_1.Observable.never = staticNever;\n//# sourceMappingURL=never.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.of = rxjs_1.of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.onErrorResumeNext = rxjs_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.pairs = rxjs_1.pairs;\n//# sourceMappingURL=pairs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.race = rxjs_1.race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.range = rxjs_1.range;\n//# sourceMappingURL=range.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.throw = rxjs_1.throwError;\nrxjs_1.Observable.throwError = rxjs_1.throwError;\n//# sourceMappingURL=throw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.timer = rxjs_1.timer;\n//# sourceMappingURL=timer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.using = rxjs_1.using;\n//# sourceMappingURL=using.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.zip = rxjs_1.zip;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar audit_1 = require(\"../../operator/audit\");\nrxjs_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar auditTime_1 = require(\"../../operator/auditTime\");\nrxjs_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar buffer_1 = require(\"../../operator/buffer\");\nrxjs_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferCount_1 = require(\"../../operator/bufferCount\");\nrxjs_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferTime_1 = require(\"../../operator/bufferTime\");\nrxjs_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferToggle_1 = require(\"../../operator/bufferToggle\");\nrxjs_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferWhen_1 = require(\"../../operator/bufferWhen\");\nrxjs_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar catch_1 = require(\"../../operator/catch\");\nrxjs_1.Observable.prototype.catch = catch_1._catch;\nrxjs_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar combineAll_1 = require(\"../../operator/combineAll\");\nrxjs_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar combineLatest_1 = require(\"../../operator/combineLatest\");\nrxjs_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concat_1 = require(\"../../operator/concat\");\nrxjs_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatAll_1 = require(\"../../operator/concatAll\");\nrxjs_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatMap_1 = require(\"../../operator/concatMap\");\nrxjs_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatMapTo_1 = require(\"../../operator/concatMapTo\");\nrxjs_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar count_1 = require(\"../../operator/count\");\nrxjs_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar debounce_1 = require(\"../../operator/debounce\");\nrxjs_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar debounceTime_1 = require(\"../../operator/debounceTime\");\nrxjs_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar defaultIfEmpty_1 = require(\"../../operator/defaultIfEmpty\");\nrxjs_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar delay_1 = require(\"../../operator/delay\");\nrxjs_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar delayWhen_1 = require(\"../../operator/delayWhen\");\nrxjs_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar dematerialize_1 = require(\"../../operator/dematerialize\");\nrxjs_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinct_1 = require(\"../../operator/distinct\");\nrxjs_1.Observable.prototype.distinct = distinct_1.distinct;\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinctUntilChanged_1 = require(\"../../operator/distinctUntilChanged\");\nrxjs_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinctUntilKeyChanged_1 = require(\"../../operator/distinctUntilKeyChanged\");\nrxjs_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar do_1 = require(\"../../operator/do\");\nrxjs_1.Observable.prototype.do = do_1._do;\nrxjs_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar elementAt_1 = require(\"../../operator/elementAt\");\nrxjs_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n//# sourceMappingURL=elementAt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar every_1 = require(\"../../operator/every\");\nrxjs_1.Observable.prototype.every = every_1.every;\n//# sourceMappingURL=every.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar exhaust_1 = require(\"../../operator/exhaust\");\nrxjs_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n//# sourceMappingURL=exhaust.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar exhaustMap_1 = require(\"../../operator/exhaustMap\");\nrxjs_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar expand_1 = require(\"../../operator/expand\");\nrxjs_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar filter_1 = require(\"../../operator/filter\");\nrxjs_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar finally_1 = require(\"../../operator/finally\");\nrxjs_1.Observable.prototype.finally = finally_1._finally;\nrxjs_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar find_1 = require(\"../../operator/find\");\nrxjs_1.Observable.prototype.find = find_1.find;\n//# sourceMappingURL=find.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar findIndex_1 = require(\"../../operator/findIndex\");\nrxjs_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n//# sourceMappingURL=findIndex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar first_1 = require(\"../../operator/first\");\nrxjs_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar groupBy_1 = require(\"../../operator/groupBy\");\nrxjs_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar ignoreElements_1 = require(\"../../operator/ignoreElements\");\nrxjs_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar isEmpty_1 = require(\"../../operator/isEmpty\");\nrxjs_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n//# sourceMappingURL=isEmpty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar last_1 = require(\"../../operator/last\");\nrxjs_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar let_1 = require(\"../../operator/let\");\nrxjs_1.Observable.prototype.let = let_1.letProto;\nrxjs_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar map_1 = require(\"../../operator/map\");\nrxjs_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mapTo_1 = require(\"../../operator/mapTo\");\nrxjs_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar materialize_1 = require(\"../../operator/materialize\");\nrxjs_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar max_1 = require(\"../../operator/max\");\nrxjs_1.Observable.prototype.max = max_1.max;\n//# sourceMappingURL=max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar merge_1 = require(\"../../operator/merge\");\nrxjs_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeAll_1 = require(\"../../operator/mergeAll\");\nrxjs_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n//# sourceMappingURL=mergeAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeMap_1 = require(\"../../operator/mergeMap\");\nrxjs_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nrxjs_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeMapTo_1 = require(\"../../operator/mergeMapTo\");\nrxjs_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nrxjs_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeScan_1 = require(\"../../operator/mergeScan\");\nrxjs_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n//# sourceMappingURL=mergeScan.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar min_1 = require(\"../../operator/min\");\nrxjs_1.Observable.prototype.min = min_1.min;\n//# sourceMappingURL=min.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar multicast_1 = require(\"../../operator/multicast\");\nrxjs_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar observeOn_1 = require(\"../../operator/observeOn\");\nrxjs_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar onErrorResumeNext_1 = require(\"../../operator/onErrorResumeNext\");\nrxjs_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar pairwise_1 = require(\"../../operator/pairwise\");\nrxjs_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n//# sourceMappingURL=pairwise.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar partition_1 = require(\"../../operator/partition\");\nrxjs_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar pluck_1 = require(\"../../operator/pluck\");\nrxjs_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publish_1 = require(\"../../operator/publish\");\nrxjs_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishBehavior_1 = require(\"../../operator/publishBehavior\");\nrxjs_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishLast_1 = require(\"../../operator/publishLast\");\nrxjs_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishReplay_1 = require(\"../../operator/publishReplay\");\nrxjs_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar race_1 = require(\"../../operator/race\");\nrxjs_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar reduce_1 = require(\"../../operator/reduce\");\nrxjs_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar repeat_1 = require(\"../../operator/repeat\");\nrxjs_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar repeatWhen_1 = require(\"../../operator/repeatWhen\");\nrxjs_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar retry_1 = require(\"../../operator/retry\");\nrxjs_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar retryWhen_1 = require(\"../../operator/retryWhen\");\nrxjs_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sample_1 = require(\"../../operator/sample\");\nrxjs_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sampleTime_1 = require(\"../../operator/sampleTime\");\nrxjs_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar scan_1 = require(\"../../operator/scan\");\nrxjs_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sequenceEqual_1 = require(\"../../operator/sequenceEqual\");\nrxjs_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar share_1 = require(\"../../operator/share\");\nrxjs_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar shareReplay_1 = require(\"../../operator/shareReplay\");\nrxjs_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;\n//# sourceMappingURL=shareReplay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar single_1 = require(\"../../operator/single\");\nrxjs_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skip_1 = require(\"../../operator/skip\");\nrxjs_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipLast_1 = require(\"../../operator/skipLast\");\nrxjs_1.Observable.prototype.skipLast = skipLast_1.skipLast;\n//# sourceMappingURL=skipLast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipUntil_1 = require(\"../../operator/skipUntil\");\nrxjs_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipWhile_1 = require(\"../../operator/skipWhile\");\nrxjs_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar startWith_1 = require(\"../../operator/startWith\");\nrxjs_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar subscribeOn_1 = require(\"../../operator/subscribeOn\");\nrxjs_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switch_1 = require(\"../../operator/switch\");\nrxjs_1.Observable.prototype.switch = switch_1._switch;\nrxjs_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMap_1 = require(\"../../operator/switchMap\");\nrxjs_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMapTo_1 = require(\"../../operator/switchMapTo\");\nrxjs_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar take_1 = require(\"../../operator/take\");\nrxjs_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeLast_1 = require(\"../../operator/takeLast\");\nrxjs_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeUntil_1 = require(\"../../operator/takeUntil\");\nrxjs_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeWhile_1 = require(\"../../operator/takeWhile\");\nrxjs_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar throttle_1 = require(\"../../operator/throttle\");\nrxjs_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar throttleTime_1 = require(\"../../operator/throttleTime\");\nrxjs_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeInterval_1 = require(\"../../operator/timeInterval\");\nrxjs_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n//# sourceMappingURL=timeInterval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeout_1 = require(\"../../operator/timeout\");\nrxjs_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeoutWith_1 = require(\"../../operator/timeoutWith\");\nrxjs_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timestamp_1 = require(\"../../operator/timestamp\");\nrxjs_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar toArray_1 = require(\"../../operator/toArray\");\nrxjs_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n//# sourceMappingURL=toPromise.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar window_1 = require(\"../../operator/window\");\nrxjs_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowCount_1 = require(\"../../operator/windowCount\");\nrxjs_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowTime_1 = require(\"../../operator/windowTime\");\nrxjs_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowToggle_1 = require(\"../../operator/windowToggle\");\nrxjs_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowWhen_1 = require(\"../../operator/windowWhen\");\nrxjs_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar withLatestFrom_1 = require(\"../../operator/withLatestFrom\");\nrxjs_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar zip_1 = require(\"../../operator/zip\");\nrxjs_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar zipAll_1 = require(\"../../operator/zipAll\");\nrxjs_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return operators_1.audit(durationSelector)(this);\n}\nexports.audit = audit;\n//# sourceMappingURL=audit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.auditTime(duration, scheduler)(this);\n}\nexports.auditTime = auditTime;\n//# sourceMappingURL=auditTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return operators_1.buffer(closingNotifier)(this);\n}\nexports.buffer = buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return operators_1.bufferCount(bufferSize, startBufferEvery)(this);\n}\nexports.bufferCount = bufferCount;\n//# sourceMappingURL=bufferCount.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=asyncScheduler] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = rxjs_1.asyncScheduler;\n    if (internal_compatibility_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return operators_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\nexports.bufferTime = bufferTime;\n//# sourceMappingURL=bufferTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return operators_1.bufferToggle(openings, closingSelector)(this);\n}\nexports.bufferToggle = bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return operators_1.bufferWhen(closingSelector)(this);\n}\nexports.bufferWhen = bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    return operators_1.catchError(selector)(this);\n}\nexports._catch = _catch;\n//# sourceMappingURL=catch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return operators_1.combineAll(project)(this);\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && internal_compatibility_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return this.lift.call(rxjs_1.of.apply(void 0, [this].concat(observables)), new internal_compatibility_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.concat.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return operators_1.concatAll()(this);\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project) {\n    return operators_1.concatMap(project)(this);\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable) {\n    return operators_1.concatMapTo(innerObservable)(this);\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return operators_1.count(predicate)(this);\n}\nexports.count = count;\n//# sourceMappingURL=count.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return operators_1.debounce(durationSelector)(this);\n}\nexports.debounce = debounce;\n//# sourceMappingURL=debounce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.debounceTime(dueTime, scheduler)(this);\n}\nexports.debounceTime = debounceTime;\n//# sourceMappingURL=debounceTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return operators_1.defaultIfEmpty(defaultValue)(this);\n}\nexports.defaultIfEmpty = defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=asyncScheduler] The SchedulerLike to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.delay(delay, scheduler)(this);\n}\nexports.delay = delay;\n//# sourceMappingURL=delay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    return operators_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);\n}\nexports.delayWhen = delayWhen;\n//# sourceMappingURL=delayWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return operators_1.dematerialize()(this);\n}\nexports.dematerialize = dematerialize;\n//# sourceMappingURL=dematerialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return operators_1.distinct(keySelector, flushes)(this);\n}\nexports.distinct = distinct;\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return operators_1.distinctUntilChanged(compare, keySelector)(this);\n}\nexports.distinctUntilChanged = distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return operators_1.distinctUntilKeyChanged(key, compare)(this);\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return operators_1.tap(nextOrObserver, error, complete)(this);\n}\nexports._do = _do;\n//# sourceMappingURL=do.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return operators_1.elementAt.apply(undefined, arguments)(this);\n}\nexports.elementAt = elementAt;\n//# sourceMappingURL=elementAt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return operators_1.every(predicate, thisArg)(this);\n}\nexports.every = every;\n//# sourceMappingURL=every.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n */\nfunction exhaust() {\n    return operators_1.exhaust()(this);\n}\nexports.exhaust = exhaust;\n//# sourceMappingURL=exhaust.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = fromEvent(document, 'click');\n * var result = clicks.pipe(exhaustMap((ev) => Rx.Observable.interval(1000).take(5)));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n */\nfunction exhaustMap(project) {\n    return operators_1.exhaustMap(project)(this);\n}\nexports.exhaustMap = exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return operators_1.expand(project, concurrent, scheduler)(this);\n}\nexports.expand = expand;\n//# sourceMappingURL=expand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return operators_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete, error or unsubscribe.\n *\n * <span class=\"informal\">Ensure a given function will be called when a stream ends, no matter why it ended.</span>\n *\n * `finally` method accepts as a single parameter a function. This function does not accept any parameters and\n * should not return anything. It will be called whenever source Observable completes, errors or is unsubscribed,\n * which makes it good candidate to perform any necessary clean up or side effects when Observable terminates,\n * no matter how or why it terminated.\n *\n * Observable returned by `finally` will simply mirror source Observable - each time it is subscribed, source\n * Observable will be subscribed underneath.\n *\n * Note that behavior of `finally` will be repeated per every subscription, so if resulting Observable has\n * many subscribers, function passed to `finally` might be potentially called multiple times.\n *\n * Remember also that `finally` differs quite a lot from passing complete or error handler to {@link subscribe}. It will\n * return an Observable which can be further chained, while `subscribe` returns Subscription, basically ending Observable\n * chain. Function passed to `finally` will be called also when consumer of resulting Observable unsubscribes from it,\n * while handlers passed to `subscribe` will not (even complete handler). But most importantly, `finally` does not start\n * an execution of source Observable, like `subscribe` does, allowing you to set up all necessary hooks before\n * passing Observable further, even without specific knowledge how or when it will be used.\n *\n *\n * @example <caption>Call finally after complete notification</caption>\n * Rx.Observable.of(1, 2, 3)\n * .finally(() => console.log('I was finalized!'))\n * .map(x => x * 2) // `finally` returns an Observable, so we still can chain operators.\n * .subscribe(\n *   val => console.log(val),\n *   err => {},\n *   () => console.log('I completed!')\n * );\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // \"I completed!\"\n * // \"I was finalized!\"\n *\n *\n *\n * @example <caption>Call finally after consumer unsubscribes</caption>\n * const o = Rx.Observable.interval(1000)\n * .finally(() => console.log('Timer stopped'));\n *\n * const subscription = o.subscribe(\n *   val => console.log(val),\n *   err => {},\n *   () => console.log('Complete!') // Will not be called, since complete handler\n * );                               // does not react to unsubscription, just to\n *                                  // complete notification sent by the Observable itself.\n *\n * setTimeout(() => subscription.unsubscribe(), 2500);\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // \"Timer stopped\" after 2.5s\n *\n * @see {@link using}\n *\n * @param {function} callback Function to be called when source terminates (completes, errors or is unsubscribed).\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @name finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return operators_1.finalize(callback)(this);\n}\nexports._finally = _finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    return operators_1.find(predicate, thisArg)(this);\n}\nexports.find = find;\n//# sourceMappingURL=find.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return operators_1.findIndex(predicate, thisArg)(this);\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {T} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.first.apply(void 0, args)(this);\n}\nexports.first = first;\n//# sourceMappingURL=first.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return operators_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);\n}\nexports.groupBy = groupBy;\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return operators_1.ignoreElements()(this);\n}\nexports.ignoreElements = ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return operators_1.isEmpty()(this);\n}\nexports.isEmpty = isEmpty;\n//# sourceMappingURL=isEmpty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - The default value to use if the predicate isn't\n * satisfied, or no values were emitted (if no predicate).\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.last.apply(void 0, args)(this);\n}\nexports.last = last;\n//# sourceMappingURL=last.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return operators_1.map(project, thisArg)(this);\n}\nexports.map = map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return operators_1.mapTo(value)(this);\n}\nexports.mapTo = mapTo;\n//# sourceMappingURL=mapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return operators_1.materialize()(this);\n}\nexports.materialize = materialize;\n//# sourceMappingURL=materialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    return operators_1.max(comparer)(this);\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.merge.apply(void 0, [this].concat(observables)));\n}\nexports.merge = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeAll(concurrent)(this);\n}\nexports.mergeAll = mergeAll;\n//# sourceMappingURL=mergeAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeMap(project, concurrent)(this);\n}\nexports.mergeMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeMapTo(innerObservable, concurrent)(this);\n}\nexports.mergeMapTo = mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeScan(accumulator, seed, concurrent)(this);\n}\nexports.mergeScan = mergeScan;\n//# sourceMappingURL=mergeScan.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    return operators_1.min(comparer)(this);\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return operators_1.multicast(subjectOrSubjectFactory, selector)(this);\n}\nexports.multicast = multicast;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operators_1.observeOn(scheduler, delay)(this);\n}\nexports.observeOn = observeOn;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    return operators_1.onErrorResumeNext.apply(void 0, nextSources)(this);\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return operators_1.pairwise()(this);\n}\nexports.pairwise = pairwise;\n//# sourceMappingURL=pairwise.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return operators_1.partition(predicate, thisArg)(this);\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    return operators_1.pluck.apply(void 0, properties)(this);\n}\nexports.pluck = pluck;\n//# sourceMappingURL=pluck.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return operators_1.publish(selector)(this);\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return operators_1.publishBehavior(value)(this);\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    //TODO(benlesh): correct type-flow through here.\n    return operators_1.publishLast()(this);\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return operators_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return operators_1.race.apply(void 0, observables)(this);\n}\nexports.race = race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return operators_1.reduce(accumulator, seed)(this);\n    }\n    return operators_1.reduce(accumulator)(this);\n}\nexports.reduce = reduce;\n//# sourceMappingURL=reduce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return operators_1.repeat(count)(this);\n}\nexports.repeat = repeat;\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return operators_1.repeatWhen(notifier)(this);\n}\nexports.repeatWhen = repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return operators_1.retry(count)(this);\n}\nexports.retry = retry;\n//# sourceMappingURL=retry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return operators_1.retryWhen(notifier)(this);\n}\nexports.retryWhen = retryWhen;\n//# sourceMappingURL=retryWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return operators_1.sample(notifier)(this);\n}\nexports.sample = sample;\n//# sourceMappingURL=sample.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.sampleTime(period, scheduler)(this);\n}\nexports.sampleTime = sampleTime;\n//# sourceMappingURL=sampleTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return operators_1.scan(accumulator, seed)(this);\n    }\n    return operators_1.scan(accumulator)(this);\n}\nexports.scan = scan;\n//# sourceMappingURL=scan.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return operators_1.sequenceEqual(compareTo, comparor)(this);\n}\nexports.sequenceEqual = sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return operators_1.share()(this);\n}\nexports.share = share;\n//# sourceMappingURL=share.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay(bufferSize, windowTime, scheduler) {\n    return operators_1.shareReplay(bufferSize, windowTime, scheduler)(this);\n}\nexports.shareReplay = shareReplay;\n//# sourceMappingURL=shareReplay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return operators_1.single(predicate)(this);\n}\nexports.single = single;\n//# sourceMappingURL=single.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return operators_1.skip(count)(this);\n}\nexports.skip = skip;\n//# sourceMappingURL=skip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return operators_1.skipLast(count)(this);\n}\nexports.skipLast = skipLast;\n//# sourceMappingURL=skipLast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return operators_1.skipUntil(notifier)(this);\n}\nexports.skipUntil = skipUntil;\n//# sourceMappingURL=skipUntil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return operators_1.skipWhile(predicate)(this);\n}\nexports.skipWhile = skipWhile;\n//# sourceMappingURL=skipWhile.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return operators_1.startWith.apply(void 0, array)(this);\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operators_1.subscribeOn(scheduler, delay)(this);\n}\nexports.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return operators_1.switchAll()(this);\n}\nexports._switch = _switch;\n//# sourceMappingURL=switch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project) {\n    return operators_1.switchMap(project)(this);\n}\nexports.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable) {\n    return operators_1.switchMapTo(innerObservable)(this);\n}\nexports.switchMapTo = switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return operators_1.take(count)(this);\n}\nexports.take = take;\n//# sourceMappingURL=take.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return operators_1.takeLast(count)(this);\n}\nexports.takeLast = takeLast;\n//# sourceMappingURL=takeLast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return operators_1.takeUntil(notifier)(this);\n}\nexports.takeUntil = takeUntil;\n//# sourceMappingURL=takeUntil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return operators_1.takeWhile(predicate)(this);\n}\nexports.takeWhile = takeWhile;\n//# sourceMappingURL=takeWhile.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = internal_compatibility_1.defaultThrottleConfig; }\n    return operators_1.throttle(durationSelector, config)(this);\n}\nexports.throttle = throttle;\n//# sourceMappingURL=throttle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    if (config === void 0) { config = internal_compatibility_1.defaultThrottleConfig; }\n    return operators_1.throttleTime(duration, scheduler, config)(this);\n}\nexports.throttleTime = throttleTime;\n//# sourceMappingURL=throttleTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeInterval(scheduler)(this);\n}\nexports.timeInterval = timeInterval;\n//# sourceMappingURL=timeInterval.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeout(due, scheduler)(this);\n}\nexports.timeout = timeout;\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeoutWith(due, withObservable, scheduler)(this);\n}\nexports.timeoutWith = timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timestamp(scheduler)(this);\n}\nexports.timestamp = timestamp;\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return operators_1.toArray()(this);\n}\nexports.toArray = toArray;\n//# sourceMappingURL=toArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return operators_1.window(windowBoundaries)(this);\n}\nexports.window = window;\n//# sourceMappingURL=window.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return operators_1.windowCount(windowSize, startWindowEvery)(this);\n}\nexports.windowCount = windowCount;\n//# sourceMappingURL=windowCount.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\nfunction windowTime(windowTimeSpan) {\n    var scheduler = rxjs_1.asyncScheduler;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (internal_compatibility_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (internal_compatibility_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (internal_compatibility_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (internal_compatibility_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (internal_compatibility_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return operators_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\nexports.windowTime = windowTime;\n//# sourceMappingURL=windowTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return operators_1.windowToggle(openings, closingSelector)(this);\n}\nexports.windowToggle = windowToggle;\n//# sourceMappingURL=windowToggle.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return operators_1.windowWhen(closingSelector)(this);\n}\nexports.windowWhen = windowWhen;\n//# sourceMappingURL=windowWhen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.withLatestFrom.apply(void 0, args)(this);\n}\nexports.withLatestFrom = withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.zip.apply(void 0, [this].concat(observables)));\n}\nexports.zipProto = zipProto;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return operators_1.zipAll(project)(this);\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat\"));\n//# sourceMappingURL=Rx.js.map","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { ajax } from '../internal/observable/dom/ajax';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\n//# sourceMappingURL=index.js.map\n","/* Observable */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n/* Notification */\nexport { Notification } from './internal/Notification';\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n/* Config */\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { config } from '../internal/config';\nexport { InnerSubscriber } from '../internal/InnerSubscriber';\nexport { OuterSubscriber } from '../internal/OuterSubscriber';\nexport { Scheduler } from '../internal/Scheduler';\nexport { AnonymousSubject } from '../internal/Subject';\nexport { SubjectSubscription } from '../internal/SubjectSubscription';\nexport { Subscriber } from '../internal/Subscriber';\nexport { fromPromise } from '../internal/observable/fromPromise';\nexport { fromIterable } from '../internal/observable/fromIterable';\nexport { ajax } from '../internal/observable/dom/ajax';\nexport { webSocket } from '../internal/observable/dom/webSocket';\nexport { ajaxGet, ajaxPost, ajaxDelete, ajaxPut, ajaxPatch, ajaxGetJSON, AjaxObservable, AjaxSubscriber, AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\nexport { WebSocketSubject } from '../internal/observable/dom/WebSocketSubject';\nexport { CombineLatestOperator } from '../internal/observable/combineLatest';\nexport { dispatch } from '../internal/observable/range';\nexport { SubscribeOnObservable } from '../internal/observable/SubscribeOnObservable';\nexport { Timestamp } from '../internal/operators/timestamp';\nexport { TimeInterval } from '../internal/operators/timeInterval';\nexport { GroupedObservable } from '../internal/operators/groupBy';\nexport { defaultThrottleConfig } from '../internal/operators/throttle';\nexport { rxSubscriber } from '../internal/symbol/rxSubscriber';\nexport { iterator } from '../internal/symbol/iterator';\nexport { observable } from '../internal/symbol/observable';\nexport { ArgumentOutOfRangeError } from '../internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from '../internal/util/EmptyError';\nexport { Immediate } from '../internal/util/Immediate';\nexport { ObjectUnsubscribedError } from '../internal/util/ObjectUnsubscribedError';\nexport { TimeoutError } from '../internal/util/TimeoutError';\nexport { UnsubscriptionError } from '../internal/util/UnsubscriptionError';\nexport { applyMixins } from '../internal/util/applyMixins';\nexport { errorObject } from '../internal/util/errorObject';\nexport { hostReportError } from '../internal/util/hostReportError';\nexport { identity } from '../internal/util/identity';\nexport { isArray } from '../internal/util/isArray';\nexport { isArrayLike } from '../internal/util/isArrayLike';\nexport { isDate } from '../internal/util/isDate';\nexport { isFunction } from '../internal/util/isFunction';\nexport { isIterable } from '../internal/util/isIterable';\nexport { isNumeric } from '../internal/util/isNumeric';\nexport { isObject } from '../internal/util/isObject';\nexport { isInteropObservable as isObservable } from '../internal/util/isInteropObservable';\nexport { isPromise } from '../internal/util/isPromise';\nexport { isScheduler } from '../internal/util/isScheduler';\nexport { noop } from '../internal/util/noop';\nexport { not } from '../internal/util/not';\nexport { pipe } from '../internal/util/pipe';\nexport { root } from '../internal/util/root';\nexport { subscribeTo } from '../internal/util/subscribeTo';\nexport { subscribeToArray } from '../internal/util/subscribeToArray';\nexport { subscribeToIterable } from '../internal/util/subscribeToIterable';\nexport { subscribeToObservable } from '../internal/util/subscribeToObservable';\nexport { subscribeToPromise } from '../internal/util/subscribeToPromise';\nexport { subscribeToResult } from '../internal/util/subscribeToResult';\nexport { toSubscriber } from '../internal/util/toSubscriber';\nexport { tryCatch } from '../internal/util/tryCatch';\n//# sourceMappingURL=index.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { Subscription } from './Subscription';\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject));\nexport { AsyncSubject };\n//# sourceMappingURL=AsyncSubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     * @nocollapse\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = /*@__PURE__*/ (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        /** Internal implementation detail, do not use directly. */\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     * @nocollapse\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        // Since this method is invoked in every next() call than the buffer\n        // can overgrow the max size only by one item\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nvar Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    /** @nocollapse */\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\n/**\n * @class Subject<T>\n */\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    /**@nocollapse */\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        /** @internal */ _this.syncErrorValue = null;\n        /** @internal */ _this.syncErrorThrown = false;\n        /** @internal */ _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n                    // node_modules, we cannot rely on `instanceof` checks\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     * @nocollapse\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = /*@__PURE__*/ (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        /** @internal */\n        this._parent = null;\n        /** @internal */\n        this._parents = null;\n        /** @internal */\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    /** @internal */\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    /** @nocollapse */\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport var config = {\n    /**\n     * The promise constructor used by default for methods such as\n     * {@link toPromise} and {@link forEach}\n     */\n    Promise: undefined,\n    /**\n     * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n     * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n     * call in a try/catch block. It also enables producer interference, a nasty bug\n     * where a multicast can be broken for all observers by a downstream consumer with\n     * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n     * FOR MIGRATION REASONS.\n     */\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        /** @internal */\n        _this._isComplete = false;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    /** @nocollapse */\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    /** @nocollapse */\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\nexport { SubscribeOnObservable };\n//# sourceMappingURL=SubscribeOnObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n// tslint:enable:max-line-length\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, the\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is very important to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - {@link Scheduler} - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n * and call `subscribe` on the output Observable all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n *\n * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * var getJSONAsObservable = bindCallback(jQuery.getJSON);\n * var result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Receive an array of arguments passed to a callback</caption>\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n *\n *\n * @example <caption>Compare behaviour with and without async Scheduler</caption>\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n *\n *\n * @example <caption>Use bindCallback on an object method</caption>\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n *\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var context = this;\n        var subject;\n        var params = {\n            context: context,\n            subject: subject,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n        };\n        return new Observable(function (subscriber) {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                var state = {\n                    args: args, subscriber: subscriber, params: params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var self = this;\n    var args = state.args, subscriber = state.subscriber, params = state.params;\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    var value = state.value, subject = state.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    var err = state.err, subject = state.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map\n","/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * Scheduler works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n *\n * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n * import * as fs from 'fs';\n * var readFileAsObservable = bindNodeCallback(fs.readFile);\n * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Use on function calling callback with multiple arguments</caption>\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n *\n * @example <caption>Use on function calling callback in regular style</caption>\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n *\n *\n * @see {@link bindCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {\n            subject: undefined,\n            args: args,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n            context: this,\n        };\n        return new Observable(function (subscriber) {\n            var context = params.context;\n            var subject = params.subject;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        var err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var params = state.params, subscriber = state.subscriber, context = state.context;\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * <img src=\"./img/defer.png\" width=\"100%\">\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n * var clicksOrInterval = Rx.Observable.defer(function () {\n *   if (Math.random() > 0.5) {\n *     return Rx.Observable.fromEvent(document, 'click');\n *   } else {\n *     return Rx.Observable.interval(1000);\n *   }\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n *\n * @see {@link create}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map\n","/** PURE_IMPORTS_START tslib,_.._util_root,_.._util_tryCatch,_.._util_errorObject,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                    //suppress exceptions\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        var _this = _super.call(this) || this;\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        _this.request = request;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n     * @nocollapse\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\nexport { AjaxObservable };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        var _this = _super.call(this, destination) || this;\n        _this.request = request;\n        _this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = _this.serializeBody(request.body, request.headers['Content-Type']);\n        _this.send();\n        return _this;\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch(createXHR).call(request);\n        if (xhr === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n            if (result === errorObject) {\n                this.error(errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                // 4xx and 5xx should error (https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)\n                if (status_1 < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\nexport { AjaxSubscriber };\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = /*@__PURE__*/ (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\nexport { AjaxResponse };\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.xhr = xhr;\n        _this.request = request;\n        _this.status = xhr.status;\n        _this.responseType = xhr.responseType || request.responseType;\n        _this.response = parseXhrResponse(_this.responseType, xhr);\n        _this.name = 'AjaxError';\n        Object.setPrototypeOf(_this, AjaxError.prototype);\n        return _this;\n    }\n    return AjaxError;\n}(Error));\nexport { AjaxError };\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any XMLHttpRequest is defined to always have 'response' inferring xhr as never for the else clause.\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any XMLHttpRequest is defined to always have 'response' inferring xhr as never for the else sub-expression.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        var _this = _super.call(this, 'ajax timeout', xhr, request) || this;\n        Object.setPrototypeOf(_this, AjaxTimeoutError.prototype);\n        return _this;\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexport { AjaxTimeoutError };\n//# sourceMappingURL=AjaxObservable.js.map\n","/** PURE_IMPORTS_START tslib,_.._Subject,_.._Subscriber,_.._Observable,_.._Subscription,_.._ReplaySubject,_.._util_tryCatch,_.._util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nvar DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: function (e) { return JSON.parse(e.data); },\n    serializer: function (value) { return JSON.stringify(value); },\n};\nvar WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = _super.call(this) || this;\n        if (urlConfigOrSource instanceof Observable) {\n            _this.destination = destination;\n            _this.source = urlConfigOrSource;\n        }\n        else {\n            var config = _this._config = tslib_1.__assign({}, DEFAULT_WEBSOCKET_CONFIG);\n            config.WebSocketCtor = WebSocket;\n            _this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (var key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    };\n    /**\n     * Creates an {@link Observable}, that when subscribed to, sends a message,\n     * defined be the `subMsg` function, to the server over the socket to begin a\n     * subscription to data over that socket. Once data arrives, the\n     * `messageFilter` argument will be used to select the appropriate data for\n     * the resulting Observable. When teardown occurs, either due to\n     * unsubscription, completion or error, a message defined by the `unsubMsg`\n     * argument will be send to the server over the WebSocketSubject.\n     *\n     * @param subMsg A function to generate the subscription message to be sent to\n     * the server. This will still be processed by the serializer in the\n     * WebSocketSubject's config. (Which defaults to JSON serialization)\n     * @param unsubMsg A function to generate the unsubscription message to be\n     * sent to the server at teardown. This will still be processed by the\n     * serializer in the WebSocketSubject's config.\n     * @param messageFilter A predicate for selecting the appropriate messages\n     * from the server for the output stream.\n     */\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable(function (observer) {\n            var result = tryCatch(subMsg)();\n            if (result === errorObject) {\n                observer.error(errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch(messageFilter)(x);\n                if (result === errorObject) {\n                    observer.error(errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch(unsubMsg)();\n                if (result === errorObject) {\n                    observer.error(errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = protocol ?\n                new WebSocketCtor(url, protocol) :\n                new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription(function () {\n            _this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this._config.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber.create(function (x) {\n                if (socket.readyState === 1) {\n                    var serializer = _this._config.serializer;\n                    var msg = tryCatch(serializer)(x);\n                    if (msg === errorObject) {\n                        _this.destination.error(errorObject.e);\n                        return;\n                    }\n                    socket.send(msg);\n                }\n            }, function (e) {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this._config.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var deserializer = _this._config.deserializer;\n            var result = tryCatch(deserializer)(e);\n            if (result === errorObject) {\n                observer.error(errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var _socket = _this._socket;\n            if (_this._output.observers.length === 0) {\n                if (_socket && _socket.readyState === 1) {\n                    _socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, _socket = _a._socket;\n        if (_socket && _socket.readyState === 1) {\n            _socket.close();\n            this._resetState();\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(AnonymousSubject));\nexport { WebSocketSubject };\n//# sourceMappingURL=WebSocketSubject.js.map\n","/** PURE_IMPORTS_START _AjaxObservable PURE_IMPORTS_END */\nimport { AjaxObservable } from './AjaxObservable';\nexport var ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n","/** PURE_IMPORTS_START _WebSocketSubject PURE_IMPORTS_END */\nimport { WebSocketSubject } from './WebSocketSubject';\n/**\n * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n *\n * @example <caption>Wraps browser WebSocket</caption>\n *\n * import { webSocket } from 'rxjs/webSocket';\n *\n * let socket$ = webSocket('ws://localhost:8081');\n *\n * socket$.subscribe(\n *   (msg) => console.log('message received: ' + msg),\n *   (err) => console.log(err),\n *   () => console.log('complete')\n * );\n *\n * socket$.next(JSON.stringify({ op: 'hello' }));\n *\n * @example <caption>Wraps WebSocket from nodejs-webSocket (using node.js)</caption>\n *\n * import { webSocket } from 'rxjs/webSocket';\n * import { w3cwebSocket } from 'webSocket';\n *\n * let socket$ = webSocket({\n *   url: 'ws://localhost:8081',\n *   WebSocketCtor: w3cwebSocket\n * });\n *\n * socket$.subscribe(\n *   (msg) => console.log('message received: ' + msg),\n *   (err) => console.log(err),\n *   () => console.log('complete')\n * );\n *\n * socket$.next(JSON.stringify({ op: 'hello' }));\n *\n * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the webSocket as an url or a structure defining the webSocket object\n * @return {WebSocketSubject}\n */\nexport function webSocket(urlConfigOrSource) {\n    return new WebSocketSubject(urlConfigOrSource);\n}\n//# sourceMappingURL=webSocket.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * {@link Scheduler}. It is preferrable to use this over `empty()`.\n */\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * <img src=\"./img/empty.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then complete.</caption>\n * var result = Rx.Observable.empty().startWith(7);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n * var interval = Rx.Observable.interval(1000);\n * var result = interval.mergeMap(x =>\n *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n *\n * @see {@link create}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throw}\n *\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using EMPTY constant.\n */\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nexport function emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\n/* tslint:enable:max-line-length */\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * <img src=\"./img/forkJoin.png\" width=\"100%\">\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * @example <caption>Use forkJoin with operator emitting immediately</caption>\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8)\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n *\n *\n * @example <caption>Use forkJoin with operator emitting after some time</caption>\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)) // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n *\n * @example <caption>Use forkJoin with project function</caption>\n * import { jorkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)), // emit 0, 1, 2, 3 every half a second and complete\n *   (n, m) => n + m\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        // DEPRECATED PATH\n        resultSelector = sources.pop();\n    }\n    // if the first and only other argument is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n    if (sources.length === 1 && isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return forkJoin(sources).pipe(map(function (args) { return resultSelector.apply(void 0, args); }));\n    }\n    return new Observable(function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=forkJoin.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = Object.prototype.toString;\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * <img src=\"./img/fromEvent.png\" width=\"100%\">\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * var clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n *\n *\n * @example <caption>Use addEventListener with capture option</caption>\n * var clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                                          // which will be passed to addEventListener\n * var clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        // DEPRECATED PATH\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable from an API based on addHandler/removeHandler\n * functions.\n *\n * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n * Observable.</span>\n *\n * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n *\n * Creates an Observable by using the `addHandler` and `removeHandler`\n * functions to add and remove the handlers. The `addHandler` is\n * called when the output Observable is subscribed, and `removeHandler` is\n * called when the Subscription is unsubscribed.\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * var clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * @see {@link from}\n * @see {@link fromEvent}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n * takes a `handler` function as argument and removes it in case it was\n * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n * removeHandler function will forward it.\n * @return {Observable<T>}\n * @name fromEventPattern\n */\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator;\n            sub.add(function () {\n                // Finalize generators\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                var observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                return input.then(function (value) {\n                    sub.add(scheduler.schedule(function () {\n                        subscriber.next(value);\n                        sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                    }));\n                }, function (err) {\n                    sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n                });\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromPromise.js.map\n","/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    var resultSelector;\n    var initialState;\n    if (arguments.length == 1) {\n        var options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(function (subscriber) {\n        var state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber: subscriber,\n                iterate: iterate,\n                condition: condition,\n                resultSelector: resultSelector,\n                state: state\n            });\n        }\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, condition = state.condition;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        var conditionResult = void 0;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    var value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map\n","/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `if` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `if` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * @example <caption>Change at runtime which Observable will be subscribed</caption>\n * let subscribeToFirst;\n * const firstOrSecond = Rx.Observable.if(\n *   () => subscribeToFirst,\n *   Rx.Observable.of('first'),\n *   Rx.Observable.of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n *\n * @example <caption>Control an access to an Observable</caption>\n * let accessGranted;\n * const observableIfYouHaveAccess = Rx.Observable.if(\n *   () => accessGranted,\n *   Rx.Observable.of('It seems you have an access...') // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"The end\"\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif(condition, trueResult, falseResult) {\n    if (trueResult === void 0) {\n        trueResult = EMPTY;\n    }\n    if (falseResult === void 0) {\n        falseResult = EMPTY;\n    }\n    return defer(function () { return condition() ? trueResult : falseResult; });\n}\n//# sourceMappingURL=iif.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified IScheduler.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * <img src=\"./img/interval.png\" width=\"100%\">\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` IScheduler to provide a notion of time, but you may pass any\n * IScheduler to it.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n * var numbers = Rx.Observable.interval(1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period, scheduler) {\n    if (period === void 0) {\n        period = 0;\n    }\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * <img src=\"./img/never.png\" width=\"100%\">\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n * function info() {\n *   console.log('Will not be called');\n * }\n * var result = NEVER.startWith(7);\n * result.subscribe(x => console.log(x), info, info);\n *\n * @see {@link create}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport var NEVER = /*@__PURE__*/ new Observable(noop);\n/**\n * @deprecated Deprecated in favor of using NEVER constant.\n */\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * import { onErrorResumeNext, of } from 'rxjs/create';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    var first = sources[0], remainder = sources.slice(1);\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext.apply(void 0, first);\n    }\n    return new Observable(function (subscriber) {\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\n        return from(first).subscribe({\n            next: function (value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n/**\n * Convert an object into an observable sequence of [key, value] pairs\n * using an optional IScheduler to enumerate the object.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * var obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * var source = Rx.Observable.pairs(obj);\n *\n * var subscription = source.subscribe(\n *   function (x) {\n *     console.log('Next: %s', x);\n *   },\n *   function (err) {\n *     console.log('Error: %s', err);\n *   },\n *   function () {\n *     console.log('Completed');\n *   });\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to run the\n * enumeration of the input sequence on.\n * @returns {(Observable<[string, T]>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n                var key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            var subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));\n            return subscription;\n        });\n    }\n}\n/** @internal */\nexport function dispatch(state) {\n    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            var key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map\n","/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nvar RaceOperator = /*@__PURE__*/ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexport { RaceOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\nexport { RaceSubscriber };\n//# sourceMappingURL=race.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * <img src=\"./img/range.png\" width=\"100%\">\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * IScheduler and just delivers the notifications synchronously, but may use\n * an optional IScheduler to regulate those deliveries.\n *\n * @example <caption>Emits the numbers 1 to 10</caption>\n * var numbers = Rx.Observable.range(1, 10);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start, count, scheduler) {\n    if (start === void 0) {\n        start = 0;\n    }\n    if (count === void 0) {\n        count = 0;\n    }\n    return new Observable(function (subscriber) {\n        var index = 0;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\n/** @internal */\nexport function dispatch(state) {\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function scalar(value) {\n    var result = new Observable(function (subscriber) {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n//# sourceMappingURL=scalar.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * <img src=\"./img/throw.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then emit an error.</caption>\n * import { throwError, concat, of } from 'rxjs/create';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n * import { throwError, interval, of } from 'rxjs/create';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 13 ?\n *     throwError('Thirteens are bad') :\n *     of('a', 'b', 'c')\n *   )\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link create}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throw\n * @owner Observable\n */\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * Creates an Observable that starts emitting after an `initialDelay` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link interval}, but you can specify when\n * should the emissions start.</span>\n *\n * <img src=\"./img/timer.png\" width=\"100%\">\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n * operator uses the `async` IScheduler to provide a notion of time, but you\n * may pass any IScheduler to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n * var numbers = Rx.Observable.timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @example <caption>Emits one number after five seconds</caption>\n * var numbers = Rx.Observable.timer(5000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time to wait before\n * emitting the first value of `0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `initialDelay` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(function (subscriber) {\n        var resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = result ? from(result) : EMPTY;\n        var subscription = source.subscribe(subscriber);\n        return function () {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map\n","/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (!innerSubscription || innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nvar BufferOperator = /*@__PURE__*/ (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        _this.add(subscribeToResult(_this, closingNotifier));\n        return _this;\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nvar BufferCountOperator = /*@__PURE__*/ (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nvar BufferTimeOperator = /*@__PURE__*/ (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = /*@__PURE__*/ (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n","/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */\nimport { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return function (source) { return source.lift(new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineAll.js.map\n","/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static combineLatest.\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(from([source].concat(observables)), new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\nimport { concat as concatStatic } from '../observable/concat';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static concat.\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concatStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n","/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */\nimport { concatMap } from './concatMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(function () { return innerObservable; }, resultSelector);\n}\n//# sourceMappingURL=concatMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nvar CountOperator = /*@__PURE__*/ (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=count.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nvar DebounceOperator = /*@__PURE__*/ (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively if the duration selector Observable\n            // emits synchronously\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively when scheduled with things like\n            // VirtualScheduler/TestScheduler.\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.values = [];\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nvar DeMaterializeOperator = /*@__PURE__*/ (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nvar DistinctOperator = /*@__PURE__*/ (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set();\n        if (flushes) {\n            _this.add(subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber));\nexport { DistinctSubscriber };\n//# sourceMappingURL=distinct.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n","/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */\nimport { distinctUntilChanged } from './distinctUntilChanged';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n","/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue\n            ? defaultIfEmpty(defaultValue)\n            : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); }));\n    };\n}\n//# sourceMappingURL=elementAt.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nvar SwitchFirstOperator = /*@__PURE__*/ (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhauseMapOperator(project));\n    };\n}\nvar ExhauseMapOperator = /*@__PURE__*/ (function () {\n    function ExhauseMapOperator(project) {\n        this.project = project;\n    }\n    ExhauseMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhauseMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (scheduler === void 0) {\n        scheduler = undefined;\n    }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nvar ExpandOperator = /*@__PURE__*/ (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexport { ExpandOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber));\nexport { ExpandSubscriber };\n//# sourceMappingURL=expand.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nvar FinallyOperator = /*@__PURE__*/ (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n//# sourceMappingURL=finalize.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nvar FindValueOperator = /*@__PURE__*/ (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexport { FindValueOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\nexport { FindValueSubscriber };\n//# sourceMappingURL=find.js.map\n","/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */\nimport { FindValueOperator } from '../operators/find';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex(predicate, thisArg) {\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, true, thisArg)); };\n}\n//# sourceMappingURL=findIndex.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=first.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nvar GroupByOperator = /*@__PURE__*/ (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupedObservable, _super);\n    /** @deprecated Do not construct this type. Internal use only */\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable));\nexport { GroupedObservable };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription));\n//# sourceMappingURL=groupBy.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nvar IgnoreElementsOperator = /*@__PURE__*/ (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        // Do nothing\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nvar IsEmptyOperator = /*@__PURE__*/ (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=last.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar MapToOperator = /*@__PURE__*/ (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=mapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nvar MaterializeOperator = /*@__PURE__*/ (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=materialize.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return reduce(max);\n}\n//# sourceMappingURL=max.js.map\n","/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\nimport { merge as mergeStatic } from '../observable/merge';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static merge.\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        // DEPRECATED PATH\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nvar MergeScanOperator = /*@__PURE__*/ (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexport { MergeScanOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\nexport { MergeScanSubscriber };\n//# sourceMappingURL=mergeScan.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return reduce(min);\n}\n//# sourceMappingURL=min.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    /** @nocollapse */\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nexport function onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\n/* tslint:enable:max-line-length */\nexport function onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n","/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */\nimport { not } from '../util/not';\nimport { filter } from './filter';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return function (source) {\n        return [\n            filter(predicate, thisArg)(source),\n            filter(not(predicate, thisArg))(source)\n        ];\n    };\n}\n//# sourceMappingURL=partition.js.map\n","/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\nimport { map } from './map';\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map(plucker(properties, length))(source); };\n}\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n","/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return selector ?\n        multicast(function () { return new Subject(); }, selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map\n","/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior(value) {\n    return function (source) { return multicast(new BehaviorSubject(value))(source); };\n}\n//# sourceMappingURL=publishBehavior.js.map\n","/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return function (source) { return multicast(new AsyncSubject())(source); };\n}\n//# sourceMappingURL=publishLast.js.map\n","/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    var subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return function (source) { return multicast(function () { return subject; }, selector)(source); };\n}\n//# sourceMappingURL=publishReplay.js.map\n","/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=race.js.map\n","/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nvar RepeatOperator = /*@__PURE__*/ (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n//# sourceMappingURL=repeat.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar RetryOperator = /*@__PURE__*/ (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n//# sourceMappingURL=retry.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nvar RetryWhenOperator = /*@__PURE__*/ (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return _super.prototype.error.call(this, errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar SampleOperator = /*@__PURE__*/ (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar SampleTimeOperator = /*@__PURE__*/ (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexport { SequenceEqualOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nexport { SequenceEqualSubscriber };\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n//# sourceMappingURL=shareReplay.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emiited.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nvar SingleOperator = /*@__PURE__*/ (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n//# sourceMappingURL=single.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nvar SkipOperator = /*@__PURE__*/ (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skip.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nvar SkipLastOperator = /*@__PURE__*/ (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipLast.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nvar SkipUntilOperator = /*@__PURE__*/ (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        _this.add(_this.innerSubscription = subscribeToResult(_this, notifier));\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        this.innerSubscription.unsubscribe();\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        /* do nothing */\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nvar SkipWhileOperator = /*@__PURE__*/ (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n","/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(scalar(array[0]), source);\n        }\n        else if (len > 0) {\n            return concatStatic(fromArray(array, scheduler), source);\n        }\n        else {\n            return concatStatic(empty(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n","/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n","/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n","/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });\n}\n//# sourceMappingURL=switchMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar TakeWhileOperator = /*@__PURE__*/ (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport var defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle(durationSelector, config) {\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nvar ThrottleOperator = /*@__PURE__*/ (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.send = function () {\n        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    };\n    ThrottleSubscriber.prototype.throttle = function (value) {\n        var duration = this.tryDurationSelector(value);\n        if (duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype.throttlingDone = function () {\n        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this.throttlingDone();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/ (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype._complete = function () {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n","/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\nimport { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link ErrorEmpty}.\n *\n * @example\n *\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport var throwIfEmpty = function (errorFactory) {\n    if (errorFactory === void 0) {\n        errorFactory = defaultErrorFactory;\n    }\n    return tap({\n        hasValue: false,\n        next: function () { this.hasValue = true; },\n        complete: function () {\n            if (!this.hasValue) {\n                throw errorFactory();\n            }\n        }\n    });\n};\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        return defer(function () {\n            return source.pipe(\n            // HACK: the typings seem off with scan\n            scan(function (_a, value) {\n                var current = _a.current;\n                return ({ value: value, current: scheduler.now(), last: current });\n            }, { current: scheduler.now(), value: undefined, last: undefined }), map(function (_a) {\n                var current = _a.current, last = _a.last, value = _a.value;\n                return new TimeInterval(value, current - last);\n            }));\n        });\n    };\n}\nvar TimeInterval = /*@__PURE__*/ (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexport { TimeInterval };\n//# sourceMappingURL=timeInterval.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout(due, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n//# sourceMappingURL=timeout.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        var absoluteTimeout = isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nvar TimeoutWithOperator = /*@__PURE__*/ (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { map } from './map';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return map(function (value) { return new Timestamp(value, scheduler.now()); });\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\nvar Timestamp = /*@__PURE__*/ (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexport { Timestamp };\n//# sourceMappingURL=timestamp.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=window.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nvar WindowTimeOperator = /*@__PURE__*/ (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nvar WindowToggleOperator = /*@__PURE__*/ (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                var window_1 = new Subject();\n                var subscription = new Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            var err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n","/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { zip as zipStatic } from '../observable/zip';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static zip.\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=zip.js.map\n","/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return function (source) { return source.lift(new ZipOperator(project)); };\n}\n//# sourceMappingURL=zipAll.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\nexport { AnimationFrameAction };\n//# sourceMappingURL=AnimationFrameAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler));\nexport { AnimationFrameScheduler };\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\nexport { AsapAction };\n//# sourceMappingURL=AsapAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\nexport { AsapScheduler };\n//# sourceMappingURL=AsapScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         * @deprecated internal use only\n         */\n        _this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         * @deprecated internal use only\n         */\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nexport { VirtualTimeScheduler };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\nexport { VirtualAction };\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n","/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\nimport { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.animationFrame.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexport var animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n","/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexport var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map\n","/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\n/**\n * @deprecated use {@link iterator} instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? /*@__PURE__*/ Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscription,_SubscriptionLoggable,_util_applyMixins PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        var _this = _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        }) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable));\nexport { ColdObservable };\n/*@__PURE__*/ applyMixins(ColdObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_SubscriptionLoggable,_util_applyMixins PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject));\nexport { HotObservable };\n/*@__PURE__*/ applyMixins(HotObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n","var SubscriptionLog = /*@__PURE__*/ (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) {\n            unsubscribedFrame = Number.POSITIVE_INFINITY;\n        }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nexport { SubscriptionLog };\n//# sourceMappingURL=SubscriptionLog.js.map\n","/** PURE_IMPORTS_START _SubscriptionLog PURE_IMPORTS_END */\nimport { SubscriptionLog } from './SubscriptionLog';\nvar SubscriptionLoggable = /*@__PURE__*/ (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nexport { SubscriptionLoggable };\n//# sourceMappingURL=SubscriptionLoggable.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Notification,_ColdObservable,_HotObservable,_SubscriptionLog,_scheduler_VirtualTimeScheduler,_scheduler_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\nimport { AsyncScheduler } from '../scheduler/AsyncScheduler';\nvar defaultMaxFrame = 750;\nvar TestScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        var _this = _super.call(this, VirtualAction, defaultMaxFrame) || this;\n        _this.assertDeepEqual = assertDeepEqual;\n        _this.hotObservables = [];\n        _this.coldObservables = [];\n        _this.flushTests = [];\n        _this.runMode = false;\n        return _this;\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        var cold = new ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        var subject = new HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) {\n            unsubscriptionMarbles = null;\n        }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles, this.runMode).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        var runMode = this.runMode;\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        var runMode = this.runMode;\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles, runMode);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var flushTests = this.flushTests;\n        var flushTestsCopy = flushTests.slice();\n        for (var i = 0, l = flushTests.length; i < l; i++) {\n            var test_1 = flushTestsCopy[i];\n            if (test_1.ready) {\n                // remove it from the original array, not our copy\n                flushTests.splice(i, 1);\n                this.assertDeepEqual(test_1.actual, test_1.expected);\n            }\n        }\n    };\n    /** @nocollapse */\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles, runMode) {\n        var _this = this;\n        if (runMode === void 0) {\n            runMode = false;\n        }\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        var frame = 0;\n        var _loop_1 = function (i) {\n            var nextFrame = frame;\n            var advanceFrameBy = function (count) {\n                nextFrame += count * _this.frameTimeFactor;\n            };\n            var c = marbles[i];\n            switch (c) {\n                case ' ':\n                    // Whitespace no longer advances time\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    advanceFrameBy(1);\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    // time progression syntax\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        // Time progression must be preceeded by at least one space\n                        // if it's not at the beginning of the diagram\n                        if (i === 0 || marbles[i - 1] === ' ') {\n                            var buffer = marbles.slice(i);\n                            var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                var duration = parseFloat(match[1]);\n                                var unit = match[2];\n                                var durationInMs = void 0;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this_1.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n            frame = nextFrame;\n            out_i_1 = i;\n        };\n        var this_1 = this, out_i_1;\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n            i = out_i_1;\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    /** @nocollapse */\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables, runMode) {\n        var _this = this;\n        if (materializeInnerObservables === void 0) {\n            materializeInnerObservables = false;\n        }\n        if (runMode === void 0) {\n            runMode = false;\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n        var frame = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        var _loop_2 = function (i) {\n            var nextFrame = frame;\n            var advanceFrameBy = function (count) {\n                nextFrame += count * _this.frameTimeFactor;\n            };\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case ' ':\n                    // Whitespace no longer advances time\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '|':\n                    notification = Notification.createComplete();\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    advanceFrameBy(1);\n                    break;\n                case '#':\n                    notification = Notification.createError(errorValue || 'error');\n                    advanceFrameBy(1);\n                    break;\n                default:\n                    // Might be time progression syntax, or a value literal\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        // Time progression must be preceeded by at least one space\n                        // if it's not at the beginning of the diagram\n                        if (i === 0 || marbles[i - 1] === ' ') {\n                            var buffer = marbles.slice(i);\n                            var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                var duration = parseFloat(match[1]);\n                                var unit = match[2];\n                                var durationInMs = void 0;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this_2.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    notification = Notification.createNext(getValue(c));\n                    advanceFrameBy(1);\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n            frame = nextFrame;\n            out_i_2 = i;\n        };\n        var this_2 = this, out_i_2;\n        for (var i = 0; i < len; i++) {\n            _loop_2(i);\n            i = out_i_2;\n        }\n        return testMessages;\n    };\n    TestScheduler.prototype.run = function (callback) {\n        var prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n        var prevMaxFrames = this.maxFrames;\n        TestScheduler.frameTimeFactor = 1;\n        this.maxFrames = Number.POSITIVE_INFINITY;\n        this.runMode = true;\n        AsyncScheduler.delegate = this;\n        var helpers = {\n            cold: this.createColdObservable.bind(this),\n            hot: this.createHotObservable.bind(this),\n            flush: this.flush.bind(this),\n            expectObservable: this.expectObservable.bind(this),\n            expectSubscriptions: this.expectSubscriptions.bind(this),\n        };\n        var ret = callback(helpers);\n        this.flush();\n        TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n        this.maxFrames = prevMaxFrames;\n        this.runMode = false;\n        AsyncScheduler.delegate = undefined;\n        return ret;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler));\nexport { TestScheduler };\n//# sourceMappingURL=TestScheduler.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexport { ArgumentOutOfRangeError };\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexport { EmptyError };\n//# sourceMappingURL=EmptyError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport var Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var _this = _super.call(this, 'object unsubscribed') || this;\n        _this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);\n        return _this;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexport { ObjectUnsubscribedError };\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n//# sourceMappingURL=TimeoutError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        var _this = _super.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '') || this;\n        _this.errors = errors;\n        _this.name = 'UnsubscriptionError';\n        Object.setPrototypeOf(_this, UnsubscriptionError.prototype);\n        return _this;\n    }\n    return UnsubscriptionError;\n}(Error));\nexport { UnsubscriptionError };\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\n//# sourceMappingURL=applyMixins.js.map\n","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/** Identifies an input as being an Iterable */\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj) {\n    return obj && obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function');\n}\n//# sourceMappingURL=isObservable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/ (function () {\n    if (!_root) {\n        throw /*@__PURE__*/ new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map\n","/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        // Finalize the iterator if it happens to be a Generator\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            // Should be caught by observable subscribe function error handling.\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map\n","/* Operator exports */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n//# sourceMappingURL=index.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { TestScheduler } from '../internal/testing/TestScheduler';\n//# sourceMappingURL=index.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { webSocket as webSocket } from '../internal/observable/dom/webSocket';\nexport { WebSocketSubject } from '../internal/observable/dom/WebSocketSubject';\n//# sourceMappingURL=index.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\n//import Rx from 'rxjs'\n\nlet Rx = require('rxjs/Rx');\n\nlet offset = 10;\n\nlet box_x = 140;\nlet box_y = 140;\nlet battle_y = 200;\nlet battle_x = 200;\nlet bot_move = 0;\n\nlet canvas = document.getElementById('battlefield');\nlet cnt = canvas.getContext('2d');\nlet catchit = {};\n\nclass Warrior{\n    constructor(radius, color, x) {\n        this.x       = x,\n        this.y       = 0,\n        this.offsetX = 5,\n        this.offsetY = 5,\n        this.radius = radius,\n        this.color   = color,\n        this.offset = 10,\n        this.drawit   = function() {\n            //console.log('drawit inside class');\n            cnt.beginPath();\n            cnt.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n            cnt.fillStyle = this.color;\n            cnt.fill();\n            cnt.closePath();\n        }\n    }\n};\n\n\n\nfunction Init() {\n    catchit.human  = new Warrior(20,  '#d50',0);\n    catchit.bot  = new Warrior(20,  '#07e', 100);\n    Reset();\n}\n\n\nfunction randomMove(){\n    return Math.floor(Math.random()*4+1);\n}\n\n\n\nfunction Reset() {\n    //console.log('reset');\n    catchit.human.x          = canvas.width-2*catchit.human.radius;\n    catchit.human.y          = canvas.height-2*catchit.human.radius;\n    catchit.bot.x          = 2*catchit.bot.radius;\n    catchit.bot.y          = 2*catchit.bot.radius;\n    //catchit.pauza            = true;\n}\n\n\nfunction keyDownHandler(e) {\n    //console.log(`Key down ${e.keyCode}`);\n    if (e.keyCode == 37) { catchit.human.Left = true; } else\n    if (e.keyCode == 38) { catchit.human.Up = true; } else\n    if (e.keyCode == 39) { catchit.human.Right = true; } else\n    if (e.keyCode == 40) { catchit.human.Down = true; } else\n    if (e.keyCode == 32) { catchit.pauza = !catchit.pauza }\n    //console.log(`keyDownHandler, ${catchit.human.y}`);\n}\n\nfunction keyUpHandler(e) {\n    //console.log(`Key up ${e.keyCode}`);\n    if (e.keyCode == 37) { catchit.human.Left = false; } else\n    if (e.keyCode == 38) { catchit.human.Up = false; } else\n    if (e.keyCode == 39) { catchit.human.Right = false; } else\n    if (e.keyCode == 40) { catchit.human.Down = false; } else\n    if (e.keyCode == 32) { catchit.pauza = !catchit.pauza }\n    //console.log(`keyUpHandler, ${catchit.human.y}`);\n}\n\ndocument.addEventListener(\"keydown\", keyDownHandler);\ndocument.addEventListener(\"keyup\", keyUpHandler);\n\nfunction gotit(human, bot){\n    //console.log('gotit');\n    let dx=Math.abs(human.x-(bot.x));\n    let dy=Math.abs(human.y-(bot.y));\n    if( dx > human.radius+bot.radius ){ return(false); }\n    if( dy > human.radius+bot.radius ){ return(false); }\n    if( dx <= human.radius ){ return(true); }\n    if( dy <= human.radius ){ return(true); }\n    dx=dx-human.radius;\n    dy=dy-human.radius\n    return(dx*dx+dy*dy<=bot.radius*human.radius);\n}\n\n// rysuj stan gry\nfunction gamestatus() {\n    //console.log(`gamestatus, Human: x ${catchit.human.x}, y: ${catchit.human.y}`);\n    catchit.human.drawit();\n    catchit.bot.drawit();\n}\n\n// wykonaj przeksztalcenia gry\nfunction game_move() {\n    //console.log(`game_move`);\n    // przesuniecie pilki o offset\n    \n    Rx.Observable.timer(0, 1000).map(x => randomMove()).subscribe({ next: x => bot_move = x});\n\n    let x = bot_move;\n    //console.log(bot_move);\n    //catchit.bot.x += catchit.bot.offsetX;\n    //catchit.bot.y +=  catchit.bot.offsetY;\n    if (x === 1 && catchit.bot.y > catchit.bot.radius) {\n        catchit.bot.y -=  catchit.bot.offsetY;\n        \n        }\n    if (x === 2 && catchit.bot.y + catchit.bot.radius < canvas.height) {\n            catchit.bot.y +=  catchit.bot.offsetY;\n        }\n    if (x === 3 && catchit.bot.x + catchit.bot.radius > 0) {\n            catchit.bot.x -=  catchit.bot.offsetX;\n        }\n    if (x === 4 && catchit.bot.x < canvas.width - catchit.bot.radius) {\n            catchit.bot.x +=  catchit.bot.offsetX;\n        }\n    if (catchit.human.Up && catchit.human.y > catchit.human.radius) {\n        //console.log(`>game_move, Human up, ${catchit.human.y}, ${catchit.human.offset}`);\n        catchit.human.y -= catchit.human.offset;\n        //console.log(`human at: ${catchit.human.y}`);\n        }\n\n    if (catchit.human.Down && catchit.human.y + 2*catchit.human.radius < canvas.height) {\n            catchit.human.y += catchit.human.offset;\n        }\n\n    if (catchit.human.Left && catchit.human.x > 0) {\n            catchit.human.x -= catchit.human.offset;\n        }\n    \n    if (catchit.human.Right && catchit.human.x < canvas.width) {\n            catchit.human.x += catchit.human.offset;\n        }\n\n    // got it finally\n    if (catchit.human.x === catchit.bot.x & catchit.human.y ===catchit.bot.y)\n        {alert('Human win!')\n        catchit.pauza = true;\n    }\n}\n\n\nfunction theGame() {\n    cnt.clearRect(0, 0, canvas.width, canvas.height);\n    gamestatus();\n    game_move();\n    // odswiezanie\n    //console.log('theGame');\n    requestAnimationFrame(theGame);\n}\n\nInit();\ntheGame();"],"sourceRoot":""}